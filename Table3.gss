/*
**
** Simulation program for "PIVOTAL TEST STATISTIC FOR NON-PARAMETRIC COINTEGRATING REGRESSION FUNCTION WITH
** ENDOGENEITY AND SEMI-LONG MEMORY"
**
** Author: Sepideh Mosaferi; Date: Feb 2020
**
** Power of the Test for f(x)-- FBM case
**
*/
new;
library pgraph;
  pqgwin many;

proc( 2 ) =  kreg(y,x,xf,hpower);
local n,tvec,gam,arg,ker,ghat,m,denom;
  n    = rows(y);  @ rows x & y the same @
  m     = rows(xf); @ rows of xf in : mt(xf) = sum{(K(xf-xs)*ys}/sum(K(xf-xs) @
  tvec  = x;
  gam   = 1/n^hpower;
  arg   = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
  ker   = pdfn(arg);
  denom = sumc(ker');
  ghat  = (ker*y)./sumc(ker');
retp(ghat,denom);
endp;

proc( 2 ) =  kregepan(y,x,xf,hpower);
local n,tvec,gam,arg,ker,ghat,m,denom;
  n    = rows(y);  @ rows x & y the same @
  m     = rows(xf); @ rows of xf in : mt(xf) = sum{(K(xf-xs)*ys}/sum(K(xf-xs) @
  tvec  = x;
  gam   = 1/n^hpower;
  arg   = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
  ker   = epan(arg);
  denom = sumc(ker');
  ghat  = (ker*y)./sumc(ker');
retp(ghat,denom);
endp;  

proc  ( 1 ) = krdensity(x,xf,hpower);
local n,tvec,gam,arg,ker,ghat,m,denom;
  n     = rows(x);  @ rows x & y the same @
  m     = rows(xf); @ rows of xf in : mt(xf) = sum{(K(xf-xs)*ys}/sum(K(xf-xs) @
  tvec  = x;
  gam   = 1/n^hpower;
  arg   = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
  ker   = epan(arg);
  denom =  sumc(ker');
retp(denom);
endp;

// Minimization Alg. to find theta_hat
proc ( 1 ) = QNminimize(y,x);
local n,thetaN;
n = rows(y);
thetaN = sumc(y .* exp(x) ./ (1+exp(x)))/sumc((exp(x) ./ (1+exp(x)))^2);
retp(thetaN);
endp;   

// sigma^2_N estimate
proc ( 1 ) = SIGMA2_N(y,x,xf,thetaN,hpower);
local n,m,tvec,gam,arg,ker,gxtheta,sigma2,T_N;
n = rows(y);
m = rows(xf);
tvec = x;   
gam = 1/n^hpower;    
arg = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
ker = epan(arg);    
gxtheta = thetaN*exp(x) ./ (1+exp(x));
T_N = ker .* ((y-gxtheta)')^2;    
sigma2 = sumc(T_N') ./sumc(ker');
retp(sigma2);
endp;    


// proc to generate LM data by looping [FBM case]

proc dsim(u,d);
/*
** simulate I(d) data
** input  = u
** output = (I-L)^-d u
*/
local nn,y,b0,k,b,ur;
nn= rows(u);
b = zeros(nn,1);
y = zeros(nn,1);
b0=1;          
k =1;
do until k>nn;
   if k==1;
      b[k]=d;
   else;   
      b[k]=(k+d-1)*b[k-1]/k;
   endif;
   k = k+1;
endo;  
b=b0|b;
k =1;
do until k>nn;
   ur   = rev(u[1:k]);   
   y[k] = b[1:k]'ur;
   k = k+1;
endo;   
retp(y);
endp;


/* main program   */
 library gauss pgraph;
  pqgwin many;


fn epan(r) = 0.75*(1-r^2).*(abs(r) .le 1);
   
   seed1  = 78912342;
   iter   = 10000;             @ # iterations  @
   numh   = {500,1000,2000,5000}; @ sample size selections @
   nm     = 100;            @ number of points of function evaluation @
   
d0 = 0;          @ value of d @
d01 = 0.1;
d02 = 0.2;
d03 = 0.3;
d04 = 0.4;


aa     = 0.25; 	       @ AR coefficient for equation error AR model @
rho    = 0.5;          @ correlation between ux and uy for endogeneity @ 
	b  = 1;            @ regression coefficient @	
   sig = 0.2;              @ error standard deviation @
   
   hpower  = 1/3;   @ value of bandwidth @
   hpower2 = 1/4;   
   hpower3 = 1/5;
   hpower4 = 1/6;
   
   delta1 = 1/3;   @ value of tempering @
   delta2 = 1/4;
   delta3 = 1/5;
   delta4 = 1/6;

"LM d = " d0;
"rho = " rho;
"endogeneity correlation = " rho;
"equation st. error = " sig;
"AR coefficient for u_y = " aa;

// sample size selection  
  nn = numh[4]; 

  gdevnd0  = zeros(iter,nm);
  gghatd0  = zeros(iter,nm);
  denom_gghatd0 = zeros(iter,nm);
  SIGMA2fd0 = zeros(iter,nm);
  
  gdevnd01  = zeros(iter,nm);
  gghatd01  = zeros(iter,nm);
  denom_gghatd01 = zeros(iter,nm);
  SIGMA2fd01 = zeros(iter,nm);
  
  gdevnd03  = zeros(iter,nm);
  gghatd03  = zeros(iter,nm);
  denom_gghatd03 = zeros(iter,nm);
  SIGMA2fd03 = zeros(iter,nm);
  
  gdevnd04  = zeros(iter,nm);
  gghatd04  = zeros(iter,nm);
  denom_gghatd04 = zeros(iter,nm);
  SIGMA2fd04 = zeros(iter,nm);
  

  k = 1;
  do until k > iter;            @ loop for simulation @
	  
  ux  = rndns(nn,1,seed1);    // regressor error  
  uy  = rndns(nn,1,seed1);           // equation error
  ux  = ((1-rho^2)^0.5) *ux + rho*uy;  // endogeneity correlation = rho 
  uy  = recserar(uy,uy[1],aa);  @ converts equation error to AR(1) errors @    
      
  uxd0  = dsim(ux,d0);  // generate LM inputs for regressor [FBM case:d0]
  uxd01  = dsim(ux,d01);  // generate LM inputs for regressor [FBM case:d01]    
  uxd03  = dsim(ux,d03);  // generate LM inputs for regressor [FBM case:d03]
  uxd04  = dsim(ux,d04);  // generate LM inputs for regressor [FBM case:d04] 
      
 //x and y
 xd0   = recserar(uxd0,uxd0[1],1);  // regressor is partial sum of LM inputs [FBM case:d0]
 ysind0 = sin(pi*xd0)-sin(2*pi*xd0)/4+sin(3*pi*xd0)/9-sin(4*pi*xd0)/16;
 yd0 = b*ysind0 + sig*uy;                // cointegrated regression equation [FBM case:d0]
      
 xd01   = recserar(uxd01,uxd01[1],1);  // regressor is partial sum of LM inputs [FBM case:d01]
 ysind01 = sin(pi*xd01)-sin(2*pi*xd01)/4+sin(3*pi*xd01)/9-sin(4*pi*xd01)/16;
 yd01 = b*ysind01 + sig*uy;                // cointegrated regression equation [FBM case:d01]
      
 xd03   = recserar(uxd03,uxd03[1],1);  // regressor is partial sum of LM inputs [FBM case:d03]
 ysind03 = sin(pi*xd03)-sin(2*pi*xd03)/4+sin(3*pi*xd03)/9-sin(4*pi*xd03)/16;
 yd03 = b*ysind03 + sig*uy;                // cointegrated regression equation [FBM case:d03]     
 
 xd04   = recserar(uxd04,uxd04[1],1);  // regressor is partial sum of LM inputs [FBM case:d04]
 ysind04 = sin(pi*xd04)-sin(2*pi*xd04)/4+sin(3*pi*xd04)/9-sin(4*pi*xd04)/16;
 yd04 = b*ysind04 + sig*uy;                // cointegrated regression equation [FBM case:d04]
      
      
  //raw case [for the comparison] 
  xf  = seqa(0,1/nm,nm); //interval [0,1]
  yff = sin(pi*xf)-sin(2*pi*xf)/4+sin(3*pi*xf)/9-sin(4*pi*xf)/16;
  
  //minimization [FBM case]
  thetaNd0 = QNminimize(yd0,xd0);
  thetaNd01 = QNminimize(yd01,xd01);
  thetaNd03 = QNminimize(yd03,xd03);
  thetaNd04 = QNminimize(yd04,xd04);
  

  {sigma2Nd0}     = SIGMA2_N(yd0,xd0,xf,thetaNd0,hpower);      
  {ghatd0,denomd0}  = kregepan(yd0,xd0,xf,hpower);    
    {denom_CId0}  = krdensity(xd0,xf,hpower);
      
  {sigma2Nd01}     = SIGMA2_N(yd01,xd01,xf,thetaNd01,hpower);      
  {ghatd01,denomd01}  = kregepan(yd01,xd01,xf,hpower);    
    {denom_CId01}  = krdensity(xd01,xf,hpower); 
    
  {sigma2Nd03}     = SIGMA2_N(yd03,xd03,xf,thetaNd03,hpower);      
  {ghatd03,denomd03}  = kregepan(yd03,xd03,xf,hpower);    
    {denom_CId03}  = krdensity(xd03,xf,hpower);
    
  {sigma2Nd04}     = SIGMA2_N(yd04,xd04,xf,thetaNd04,hpower);      
  {ghatd04,denomd04}  = kregepan(yd04,xd04,xf,hpower);    
    {denom_CId04}  = krdensity(xd04,xf,hpower);  
          
   
gdevnd0[k,.] = yff'-ghatd0';
gghatd0[k,.] = ghatd0';
denom_gghatd0[k,.] = denom_CId0';
SIGMA2fd0[k,.]= sigma2Nd0';

gdevnd01[k,.] = yff'-ghatd01';
gghatd01[k,.] = ghatd01';
denom_gghatd01[k,.] = denom_CId01';
SIGMA2fd01[k,.]= sigma2Nd01';

gdevnd03[k,.] = yff'-ghatd03';
gghatd03[k,.] = ghatd03';
denom_gghatd03[k,.] = denom_CId03';
SIGMA2fd03[k,.]= sigma2Nd03';

gdevnd04[k,.] = yff'-ghatd04';
gghatd04[k,.] = ghatd04';
denom_gghatd04[k,.] = denom_CId04';
SIGMA2fd04[k,.]= sigma2Nd04';

  k = k+1;
  endo;  

/*
summary statistics for table FBM
*/
 
 /***** d0 *****/
 gghatd0 = packr(gghatd0);
 gdevnd0 = packr(gdevnd0);
 meandevgd0 = meanc(gdevnd0);
 stdgd0     = stdc(gdevnd0);
 meanghatd0 = meanc(gghatd0);
 denom_gghatd0 = packr(denom_gghatd0);
 denom_gghatd0 = denom_gghatd0[1:rows(gghatd0),1:cols(denom_gghatd0)]; 
 meandenom_gghatd0 = meanc(denom_gghatd0); 
 SIGMA2fd0 = packr(SIGMA2fd0);
 SIGMA2fd0 = SIGMA2fd0[1:rows(gghatd0),1:cols(denom_gghatd0)];  
 meanSIGMA2fd0 = meanc(SIGMA2fd0); 
  
  /* Power of Test for point 0 */ 
  CI_upd0_1 = zeros(rows(gghatd0),1);
  CI_lowd0_1 = zeros(rows(gghatd0),1);
  Inclusiond0_1 = zeros(rows(gghatd0),1);
  
  k = 1;
  do until k > rows(gghatd0); 
  
  CI_upd0_1[k,1] = gghatd0[k,1]+1.96*sqrt((SIGMA2fd0[k,1]*0.3) ./ (0.5*denom_gghatd0[k,1]));
  CI_lowd0_1[k,1] = gghatd0[k,1]-1.96*sqrt((SIGMA2fd0[k,1]*0.3) ./ (0.5*denom_gghatd0[k,1]));   
  Inclusiond0_1[k,1] = 0.125>=CI_lowd0_1[k,1] and 0.125<=CI_upd0_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond0_1 = 100*(1-meanc(Inclusiond0_1)); /* power of the test in percentage */
  
 /* Power Calculation for point 0.25 */  
  CI_upd0_26 = zeros(rows(gghatd0),1);
  CI_lowd0_26 = zeros(rows(gghatd0),1);
  Inclusiond0_26 = zeros(rows(gghatd0),1);
  
  k = 1;
  do until k > rows(gghatd0); 
  
  CI_upd0_26[k,1] = gghatd0[k,26]+1.96*sqrt((SIGMA2fd0[k,26]*0.3) ./ (0.5*denom_gghatd0[k,26]));
  CI_lowd0_26[k,1] = gghatd0[k,26]-1.96*sqrt((SIGMA2fd0[k,26]*0.3) ./ (0.5*denom_gghatd0[k,26]));   
  Inclusiond0_26[k,1] = 0.141>=CI_lowd0_26[k,1] and 0.141<=CI_upd0_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond0_26 = 100*(1-meanc(Inclusiond0_26)); /* power of the test in percentage */ 
  
  
  /* Power Calculation for point 0.50 */  
  CI_upd0_51 = zeros(rows(gghatd0),1);
  CI_lowd0_51 = zeros(rows(gghatd0),1);
  Inclusiond0_51 = zeros(rows(gghatd0),1);
  
  k = 1;
  do until k > rows(gghatd0); 
  
  CI_upd0_51[k,1] = gghatd0[k,51]+1.96*sqrt((SIGMA2fd0[k,51]*0.3) ./ (0.5*denom_gghatd0[k,51]));
  CI_lowd0_51[k,1] = gghatd0[k,51]-1.96*sqrt((SIGMA2fd0[k,51]*0.3) ./ (0.5*denom_gghatd0[k,51]));   
  Inclusiond0_51[k,1] = 0.156>=CI_lowd0_51[k,1] and 0.156<=CI_upd0_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond0_51 = 100*(1-meanc(Inclusiond0_51)); /* power of the test in percentage */  
  
 
  /* Power Calculation for point 0.75 */  
  CI_upd0_76 = zeros(rows(gghatd0),1);
  CI_lowd0_76 = zeros(rows(gghatd0),1);
  Inclusiond0_76 = zeros(rows(gghatd0),1);
  
  k = 1;
  do until k > rows(gghatd0); 
  
  CI_upd0_76[k,1] = gghatd0[k,76]+1.96*sqrt((SIGMA2fd0[k,76]*0.3) ./ (0.5*denom_gghatd0[k,76]));
  CI_lowd0_76[k,1] = gghatd0[k,76]-1.96*sqrt((SIGMA2fd0[k,76]*0.3) ./ (0.5*denom_gghatd0[k,76]));   
  Inclusiond0_76[k,1] = 0.170>=CI_lowd0_76[k,1] and 0.170<=CI_upd0_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond0_76 = 100*(1-meanc(Inclusiond0_76)); /* power of the test in percentage */  


  /* Power Calculation for point 0.95 */  
  CI_upd0_96 = zeros(rows(gghatd0),1);
  CI_lowd0_96 = zeros(rows(gghatd0),1);
  Inclusiond0_96 = zeros(rows(gghatd0),1);
  
  k = 1;
  do until k > rows(gghatd0); 
  
  CI_upd0_96[k,1] = gghatd0[k,96]+1.96*sqrt((SIGMA2fd0[k,96]*0.3) ./ (0.5*denom_gghatd0[k,96]));
  CI_lowd0_96[k,1] = gghatd0[k,96]-1.96*sqrt((SIGMA2fd0[k,96]*0.3) ./ (0.5*denom_gghatd0[k,96]));   
  Inclusiond0_96[k,1] = 0.180>=CI_lowd0_96[k,1] and 0.180<=CI_upd0_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond0_96 = 100*(1-meanc(Inclusiond0_96)); /* power of the test in percentage */ 
  
 
 NotInclusiond0_1~NotInclusiond0_26~NotInclusiond0_51~NotInclusiond0_76~NotInclusiond0_96; /* print the results */


 /***** d01 *****/
 gghatd01 = packr(gghatd01);
 gdevnd01 = packr(gdevnd01);
 meandevgd01 = meanc(gdevnd01);
 stdgd01     = stdc(gdevnd01);
 meanghatd01 = meanc(gghatd01);
 denom_gghatd01 = packr(denom_gghatd01);
 denom_gghatd01 = denom_gghatd01[1:rows(gghatd01),1:cols(denom_gghatd01)]; 
 meandenom_gghatd01 = meanc(denom_gghatd01); 
 SIGMA2fd01 = packr(SIGMA2fd01);
 SIGMA2fd01 = SIGMA2fd01[1:rows(gghatd01),1:cols(denom_gghatd01)];  
 meanSIGMA2fd01 = meanc(SIGMA2fd01); 
  
  /* Power of Test for point 0 */ 
  CI_upd01_1 = zeros(rows(gghatd01),1);
  CI_lowd01_1 = zeros(rows(gghatd01),1);
  Inclusiond01_1 = zeros(rows(gghatd01),1);
  
  k = 1;
  do until k > rows(gghatd01); 
  
  CI_upd01_1[k,1] = gghatd01[k,1]+1.96*sqrt((SIGMA2fd01[k,1]*0.3) ./ (0.5*denom_gghatd01[k,1]));
  CI_lowd01_1[k,1] = gghatd01[k,1]-1.96*sqrt((SIGMA2fd01[k,1]*0.3) ./ (0.5*denom_gghatd01[k,1]));   
  Inclusiond01_1[k,1] = 0.125>=CI_lowd01_1[k,1] and 0.125<=CI_upd01_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond01_1 = 100*(1-meanc(Inclusiond01_1)); /* power of the test in percentage */
  
 /* Power Calculation for point 0.25 */  
  CI_upd01_26 = zeros(rows(gghatd01),1);
  CI_lowd01_26 = zeros(rows(gghatd01),1);
  Inclusiond01_26 = zeros(rows(gghatd01),1);
  
  k = 1;
  do until k > rows(gghatd01); 
  
  CI_upd01_26[k,1] = gghatd01[k,26]+1.96*sqrt((SIGMA2fd01[k,26]*0.3) ./ (0.5*denom_gghatd01[k,26]));
  CI_lowd01_26[k,1] = gghatd01[k,26]-1.96*sqrt((SIGMA2fd01[k,26]*0.3) ./ (0.5*denom_gghatd01[k,26]));   
  Inclusiond01_26[k,1] = 0.141>=CI_lowd01_26[k,1] and 0.141<=CI_upd01_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond01_26 = 100*(1-meanc(Inclusiond01_26)); /* power of the test in percentage */ 
  
  
  /* Power Calculation for point 0.50 */  
  CI_upd01_51 = zeros(rows(gghatd01),1);
  CI_lowd01_51 = zeros(rows(gghatd01),1);
  Inclusiond01_51 = zeros(rows(gghatd01),1);
  
  k = 1;
  do until k > rows(gghatd01); 
  
  CI_upd01_51[k,1] = gghatd01[k,51]+1.96*sqrt((SIGMA2fd01[k,51]*0.3) ./ (0.5*denom_gghatd01[k,51]));
  CI_lowd01_51[k,1] = gghatd01[k,51]-1.96*sqrt((SIGMA2fd01[k,51]*0.3) ./ (0.5*denom_gghatd01[k,51]));   
  Inclusiond01_51[k,1] = 0.156>=CI_lowd01_51[k,1] and 0.156<=CI_upd01_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond01_51 = 100*(1-meanc(Inclusiond01_51)); /* power of the test in percentage */  
  
 
  /* Power Calculation for point 0.75 */  
  CI_upd01_76 = zeros(rows(gghatd01),1);
  CI_lowd01_76 = zeros(rows(gghatd01),1);
  Inclusiond01_76 = zeros(rows(gghatd01),1);
  
  k = 1;
  do until k > rows(gghatd01); 
  
  CI_upd01_76[k,1] = gghatd01[k,76]+1.96*sqrt((SIGMA2fd01[k,76]*0.3) ./ (0.5*denom_gghatd01[k,76]));
  CI_lowd01_76[k,1] = gghatd01[k,76]-1.96*sqrt((SIGMA2fd01[k,76]*0.3) ./ (0.5*denom_gghatd01[k,76]));   
  Inclusiond01_76[k,1] = 0.170>=CI_lowd01_76[k,1] and 0.170<=CI_upd01_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond01_76 = 100*(1-meanc(Inclusiond01_76)); /* power of the test in percentage */  


  /* Power Calculation for point 0.95 */  
  CI_upd01_96 = zeros(rows(gghatd01),1);
  CI_lowd01_96 = zeros(rows(gghatd01),1);
  Inclusiond01_96 = zeros(rows(gghatd01),1);
  
  k = 1;
  do until k > rows(gghatd01); 
  
  CI_upd01_96[k,1] = gghatd01[k,96]+1.96*sqrt((SIGMA2fd01[k,96]*0.3) ./ (0.5*denom_gghatd01[k,96]));
  CI_lowd01_96[k,1] = gghatd01[k,96]-1.96*sqrt((SIGMA2fd01[k,96]*0.3) ./ (0.5*denom_gghatd01[k,96]));   
  Inclusiond01_96[k,1] = 0.180>=CI_lowd01_96[k,1] and 0.180<=CI_upd01_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond01_96 = 100*(1-meanc(Inclusiond01_96)); /* power of the test in percentage */ 
  
 
 NotInclusiond01_1~NotInclusiond01_26~NotInclusiond01_51~NotInclusiond01_76~NotInclusiond01_96; /* print the results */


 /***** d03 *****/
 gghatd03 = packr(gghatd03);
 gdevnd03 = packr(gdevnd03);
 meandevgd03 = meanc(gdevnd03);
 stdgd03     = stdc(gdevnd03);
 meanghatd03 = meanc(gghatd03);
 denom_gghatd03 = packr(denom_gghatd03);
 denom_gghatd03 = denom_gghatd03[1:rows(gghatd03),1:cols(denom_gghatd03)]; 
 meandenom_gghatd03 = meanc(denom_gghatd03); 
 SIGMA2fd03 = packr(SIGMA2fd03);
 SIGMA2fd03 = SIGMA2fd03[1:rows(gghatd03),1:cols(denom_gghatd03)];  
 meanSIGMA2fd03 = meanc(SIGMA2fd03); 
  
  /* Power of Test for point 0 */ 
  CI_upd03_1 = zeros(rows(gghatd03),1);
  CI_lowd03_1 = zeros(rows(gghatd03),1);
  Inclusiond03_1 = zeros(rows(gghatd03),1);
  
  k = 1;
  do until k > rows(gghatd03); 
  
  CI_upd03_1[k,1] = gghatd03[k,1]+1.96*sqrt((SIGMA2fd03[k,1]*0.3) ./ (0.5*denom_gghatd03[k,1]));
  CI_lowd03_1[k,1] = gghatd03[k,1]-1.96*sqrt((SIGMA2fd03[k,1]*0.3) ./ (0.5*denom_gghatd03[k,1]));   
  Inclusiond03_1[k,1] = 0.125>=CI_lowd03_1[k,1] and 0.125<=CI_upd03_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond03_1 = 100*(1-meanc(Inclusiond03_1)); /* power of the test in percentage */
  
 /* Power Calculation for point 0.25 */  
  CI_upd03_26 = zeros(rows(gghatd03),1);
  CI_lowd03_26 = zeros(rows(gghatd03),1);
  Inclusiond03_26 = zeros(rows(gghatd03),1);
  
  k = 1;
  do until k > rows(gghatd03); 
  
  CI_upd03_26[k,1] = gghatd03[k,26]+1.96*sqrt((SIGMA2fd03[k,26]*0.3) ./ (0.5*denom_gghatd03[k,26]));
  CI_lowd03_26[k,1] = gghatd03[k,26]-1.96*sqrt((SIGMA2fd03[k,26]*0.3) ./ (0.5*denom_gghatd03[k,26]));   
  Inclusiond03_26[k,1] = 0.141>=CI_lowd03_26[k,1] and 0.141<=CI_upd03_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond03_26 = 100*(1-meanc(Inclusiond03_26)); /* power of the test in percentage */ 
  
  
  /* Power Calculation for point 0.50 */  
  CI_upd03_51 = zeros(rows(gghatd03),1);
  CI_lowd03_51 = zeros(rows(gghatd03),1);
  Inclusiond03_51 = zeros(rows(gghatd03),1);
  
  k = 1;
  do until k > rows(gghatd03); 
  
  CI_upd03_51[k,1] = gghatd03[k,51]+1.96*sqrt((SIGMA2fd03[k,51]*0.3) ./ (0.5*denom_gghatd03[k,51]));
  CI_lowd03_51[k,1] = gghatd03[k,51]-1.96*sqrt((SIGMA2fd03[k,51]*0.3) ./ (0.5*denom_gghatd03[k,51]));   
  Inclusiond03_51[k,1] = 0.156>=CI_lowd03_51[k,1] and 0.156<=CI_upd03_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond03_51 = 100*(1-meanc(Inclusiond03_51)); /* power of the test in percentage */  
  
 
  /* Power Calculation for point 0.75 */  
  CI_upd03_76 = zeros(rows(gghatd03),1);
  CI_lowd03_76 = zeros(rows(gghatd03),1);
  Inclusiond03_76 = zeros(rows(gghatd03),1);
  
  k = 1;
  do until k > rows(gghatd03); 
  
  CI_upd03_76[k,1] = gghatd03[k,76]+1.96*sqrt((SIGMA2fd03[k,76]*0.3) ./ (0.5*denom_gghatd03[k,76]));
  CI_lowd03_76[k,1] = gghatd03[k,76]-1.96*sqrt((SIGMA2fd03[k,76]*0.3) ./ (0.5*denom_gghatd03[k,76]));   
  Inclusiond03_76[k,1] = 0.170>=CI_lowd03_76[k,1] and 0.170<=CI_upd03_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond03_76 = 100*(1-meanc(Inclusiond03_76)); /* power of the test in percentage */  


  /* Power Calculation for point 0.95 */  
  CI_upd03_96 = zeros(rows(gghatd03),1);
  CI_lowd03_96 = zeros(rows(gghatd03),1);
  Inclusiond03_96 = zeros(rows(gghatd03),1);
  
  k = 1;
  do until k > rows(gghatd03); 
  
  CI_upd03_96[k,1] = gghatd03[k,96]+1.96*sqrt((SIGMA2fd03[k,96]*0.3) ./ (0.5*denom_gghatd03[k,96]));
  CI_lowd03_96[k,1] = gghatd03[k,96]-1.96*sqrt((SIGMA2fd03[k,96]*0.3) ./ (0.5*denom_gghatd03[k,96]));   
  Inclusiond03_96[k,1] = 0.180>=CI_lowd03_96[k,1] and 0.180<=CI_upd03_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond03_96 = 100*(1-meanc(Inclusiond03_96)); /* power of the test in percentage */ 
  
  
 NotInclusiond03_1~NotInclusiond03_26~NotInclusiond03_51~NotInclusiond03_76~NotInclusiond03_96; /* print the results */ 


 /***** d04 *****/
 gghatd04 = packr(gghatd04);
 gdevnd04 = packr(gdevnd04);
 meandevgd04 = meanc(gdevnd04);
 stdgd04     = stdc(gdevnd04);
 meanghatd04 = meanc(gghatd04);
 denom_gghatd04 = packr(denom_gghatd04);
 denom_gghatd04 = denom_gghatd04[1:rows(gghatd04),1:cols(denom_gghatd04)]; 
 meandenom_gghatd04 = meanc(denom_gghatd04); 
 SIGMA2fd04 = packr(SIGMA2fd04);
 SIGMA2fd04 = SIGMA2fd04[1:rows(gghatd04),1:cols(denom_gghatd04)];  
 meanSIGMA2fd04 = meanc(SIGMA2fd04); 
  
  /* Power of Test for point 0 */ 
  CI_upd04_1 = zeros(rows(gghatd04),1);
  CI_lowd04_1 = zeros(rows(gghatd04),1);
  Inclusiond04_1 = zeros(rows(gghatd04),1);
  
  k = 1;
  do until k > rows(gghatd04); 
  
  CI_upd04_1[k,1] = gghatd04[k,1]+1.96*sqrt((SIGMA2fd04[k,1]*0.3) ./ (0.5*denom_gghatd04[k,1]));
  CI_lowd04_1[k,1] = gghatd04[k,1]-1.96*sqrt((SIGMA2fd04[k,1]*0.3) ./ (0.5*denom_gghatd04[k,1]));   
  Inclusiond04_1[k,1] = 0.125>=CI_lowd04_1[k,1] and 0.125<=CI_upd04_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond04_1 = 100*(1-meanc(Inclusiond04_1)); /* power of the test in percentage */
  
 /* Power Calculation for point 0.25 */  
  CI_upd04_26 = zeros(rows(gghatd04),1);
  CI_lowd04_26 = zeros(rows(gghatd04),1);
  Inclusiond04_26 = zeros(rows(gghatd04),1);
  
  k = 1;
  do until k > rows(gghatd04); 
  
  CI_upd04_26[k,1] = gghatd04[k,26]+1.96*sqrt((SIGMA2fd04[k,26]*0.3) ./ (0.5*denom_gghatd04[k,26]));
  CI_lowd04_26[k,1] = gghatd04[k,26]-1.96*sqrt((SIGMA2fd04[k,26]*0.3) ./ (0.5*denom_gghatd04[k,26]));   
  Inclusiond04_26[k,1] = 0.141>=CI_lowd04_26[k,1] and 0.141<=CI_upd04_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond04_26 = 100*(1-meanc(Inclusiond04_26)); /* power of the test in percentage */ 
  
  
  /* Power Calculation for point 0.50 */  
  CI_upd04_51 = zeros(rows(gghatd04),1);
  CI_lowd04_51 = zeros(rows(gghatd04),1);
  Inclusiond04_51 = zeros(rows(gghatd04),1);
  
  k = 1;
  do until k > rows(gghatd04); 
  
  CI_upd04_51[k,1] = gghatd04[k,51]+1.96*sqrt((SIGMA2fd04[k,51]*0.3) ./ (0.5*denom_gghatd04[k,51]));
  CI_lowd04_51[k,1] = gghatd04[k,51]-1.96*sqrt((SIGMA2fd04[k,51]*0.3) ./ (0.5*denom_gghatd04[k,51]));   
  Inclusiond04_51[k,1] = 0.156>=CI_lowd04_51[k,1] and 0.156<=CI_upd04_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond04_51 = 100*(1-meanc(Inclusiond04_51)); /* power of the test in percentage */  
  
 
  /* Power Calculation for point 0.75 */  
  CI_upd04_76 = zeros(rows(gghatd04),1);
  CI_lowd04_76 = zeros(rows(gghatd04),1);
  Inclusiond04_76 = zeros(rows(gghatd04),1);
  
  k = 1;
  do until k > rows(gghatd04); 
  
  CI_upd04_76[k,1] = gghatd04[k,76]+1.96*sqrt((SIGMA2fd04[k,76]*0.3) ./ (0.5*denom_gghatd04[k,76]));
  CI_lowd04_76[k,1] = gghatd04[k,76]-1.96*sqrt((SIGMA2fd04[k,76]*0.3) ./ (0.5*denom_gghatd04[k,76]));   
  Inclusiond04_76[k,1] = 0.170>=CI_lowd04_76[k,1] and 0.170<=CI_upd04_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond04_76 = 100*(1-meanc(Inclusiond04_76)); /* power of the test in percentage */  


  /* Power Calculation for point 0.95 */  
  CI_upd04_96 = zeros(rows(gghatd04),1);
  CI_lowd04_96 = zeros(rows(gghatd04),1);
  Inclusiond04_96 = zeros(rows(gghatd04),1);
  
  k = 1;
  do until k > rows(gghatd04); 
  
  CI_upd04_96[k,1] = gghatd04[k,96]+1.96*sqrt((SIGMA2fd04[k,96]*0.3) ./ (0.5*denom_gghatd04[k,96]));
  CI_lowd04_96[k,1] = gghatd04[k,96]-1.96*sqrt((SIGMA2fd04[k,96]*0.3) ./ (0.5*denom_gghatd04[k,96]));   
  Inclusiond04_96[k,1] = 0.180>=CI_lowd04_96[k,1] and 0.180<=CI_upd04_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiond04_96 = 100*(1-meanc(Inclusiond04_96)); /* power of the test in percentage */ 
  
 
 NotInclusiond04_1~NotInclusiond04_26~NotInclusiond04_51~NotInclusiond04_76~NotInclusiond04_96; /* print the results */ 

/*
**
** Power Test for f(x)-- TFBM case
**
*/
new;
library pgraph;
  pqgwin many;

proc( 2 ) =  kreg(y,x,xf,hpower);
local n,tvec,gam,arg,ker,ghat,m,denom;
  n    = rows(y);  @ rows x & y the same @
  m     = rows(xf); @ rows of xf in : mt(xf) = sum{(K(xf-xs)*ys}/sum(K(xf-xs) @
  tvec  = x;
  gam   = 1/n^hpower;
  arg   = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
  ker   = pdfn(arg);
  denom = sumc(ker');
  ghat  = (ker*y)./sumc(ker');
retp(ghat,denom);
endp;

proc( 2 ) =  kregepan(y,x,xf,hpower);
local n,tvec,gam,arg,ker,ghat,m,denom;
  n    = rows(y);  @ rows x & y the same @
  m     = rows(xf); @ rows of xf in : mt(xf) = sum{(K(xf-xs)*ys}/sum(K(xf-xs) @
  tvec  = x;
  gam   = 1/n^hpower;
  arg   = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
  ker   = epan(arg);
  denom = sumc(ker');
  ghat  = (ker*y)./sumc(ker');
retp(ghat,denom);
endp;  

proc  ( 1 ) = krdensity(x,xf,hpower);
local n,tvec,gam,arg,ker,ghat,m,denom;
  n     = rows(x);  @ rows x & y the same @
  m     = rows(xf); @ rows of xf in : mt(xf) = sum{(K(xf-xs)*ys}/sum(K(xf-xs) @
  tvec  = x;
  gam   = 1/n^hpower;
  arg   = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
  ker   = epan(arg);
  denom =  sumc(ker');
retp(denom);
endp;

// Minimization Alg. to find theta_hat
proc ( 1 ) = QNminimize(y,x);
local n,thetaN;
n = rows(y);
thetaN = sumc(y .* exp(x) ./ (1+exp(x)))/sumc((exp(x) ./ (1+exp(x)))^2);
retp(thetaN);
endp;   

// sigma^2_N estimate
proc ( 1 ) = SIGMA2_N(y,x,xf,thetaN,hpower);
local n,m,tvec,gam,arg,ker,gxtheta,sigma2,T_N;
n = rows(y);
m = rows(xf);
tvec = x;   
gam = 1/n^hpower;    
arg = (xf*ones(1,n)-ones(m,1)*tvec')/gam;
ker = epan(arg);    
gxtheta = thetaN*exp(x) ./ (1+exp(x));
T_N = ker .* ((y-gxtheta)')^2;    
sigma2 = sumc(T_N') ./sumc(ker');
retp(sigma2);
endp;    


// proc to generate LM data by looping [TFBM case]

proc dsimtemp(u,d,delta);
/*
** simulate I(d) data
** input  = u
** output = (I-e^(-lambda_N)*L)^-d u; lambda_N=1/N^delta
*/
local nn,y,b0,k,b,ur,temp;
nn= rows(u);
b = zeros(nn,1);
y = zeros(nn,1);
temp = exp(-1/nn^delta);    
b0=1;          
k =1;
do until k>nn;
   if k==1;
      b[k]=temp*d;
   else;   
      b[k]=temp*(k+d-1)*b[k-1]/k;
   endif;
   k = k+1;
endo;  
b=b0|b;
k =1;
do until k>nn;
   ur   = rev(u[1:k]);   
   y[k] = b[1:k]'ur;
   k = k+1;
endo;   
retp(y);
endp;


/* main program   */
 library gauss pgraph;
  pqgwin many;


fn epan(r) = 0.75*(1-r^2).*(abs(r) .le 1);
   
   seed1  = 78912342;
   iter   = 10000;             @ # iterations  @
   numh   = {500,1000,2000,5000}; @ sample size selections @
   nm     = 100;            @ number of points of function evaluation @
   
d0 = 0;          @ value of d @
d01 = 0.1;
d02 = 0.2;
d03 = 0.3;
d04 = 0.4;


aa     = 0.25; 	       @ AR coefficient for equation error AR model @
rho    = 0.5;          @ correlation between ux and uy for endogeneity @ 
	b  = 1;            @ regression coefficient @	
   sig = 0.2;              @ error standard deviation @
   
   hpower  = 1/3;   @ value of bandwidth @
   hpower2 = 1/4;   
   hpower3 = 1/5;
   hpower4 = 1/6;
   
   delta1 = 1/3;   @ value of tempering @
   delta2 = 1/4;
   delta3 = 1/5;
   delta4 = 1/6;

"LM d = " d0;
"rho = " rho;
"endogeneity correlation = " rho;
"equation st. error = " sig;
"AR coefficient for u_y = " aa;

// sample size selection  
  nn = numh[4]; 

  gdevn_temp1d0  = zeros(iter,nm);
  gghat_temp1d0  = zeros(iter,nm);
  denom_gghat_temp1d0 = zeros(iter,nm);
  SIGMA2f_temp1d0 = zeros(iter,nm);
  
  gdevn_temp3d0  = zeros(iter,nm);
  gghat_temp3d0  = zeros(iter,nm);
  denom_gghat_temp3d0 = zeros(iter,nm);
  SIGMA2f_temp3d0 = zeros(iter,nm);
  
  
  gdevn_temp1d01  = zeros(iter,nm);
  gghat_temp1d01  = zeros(iter,nm);
  denom_gghat_temp1d01 = zeros(iter,nm);
  SIGMA2f_temp1d01 = zeros(iter,nm);
  
  gdevn_temp3d01  = zeros(iter,nm);
  gghat_temp3d01  = zeros(iter,nm);
  denom_gghat_temp3d01 = zeros(iter,nm);
  SIGMA2f_temp3d01 = zeros(iter,nm); 
  
  
  gdevn_temp1d03  = zeros(iter,nm);
  gghat_temp1d03  = zeros(iter,nm);
  denom_gghat_temp1d03 = zeros(iter,nm);
  SIGMA2f_temp1d03 = zeros(iter,nm);
  
  gdevn_temp3d03  = zeros(iter,nm);
  gghat_temp3d03  = zeros(iter,nm);
  denom_gghat_temp3d03 = zeros(iter,nm);
  SIGMA2f_temp3d03 = zeros(iter,nm);
  
  
  gdevn_temp1d04  = zeros(iter,nm);
  gghat_temp1d04  = zeros(iter,nm);
  denom_gghat_temp1d04 = zeros(iter,nm);
  SIGMA2f_temp1d04 = zeros(iter,nm);
  
  gdevn_temp3d04  = zeros(iter,nm);
  gghat_temp3d04  = zeros(iter,nm);
  denom_gghat_temp3d04 = zeros(iter,nm);
  SIGMA2f_temp3d04 = zeros(iter,nm);

  
  k = 1;
  do until k > iter;            @ loop for simulation @
	  
  ux  = rndns(nn,1,seed1);    // regressor error  
  uy  = rndns(nn,1,seed1);           // equation error
  ux  = ((1-rho^2)^0.5) *ux + rho*uy;  // endogeneity correlation = rho 
  uy  = recserar(uy,uy[1],aa);  @ converts equation error to AR(1) errors @    
      
  uxtemp1d0 = dsimtemp(ux,d0,delta1);  // generate LM inputs for regressor [TFBM case: d0]   
  uxtemp1d01 = dsimtemp(ux,d01,delta1);  // generate LM inputs for regressor [TFBM case: d01]  
  uxtemp1d03 = dsimtemp(ux,d03,delta1);  // generate LM inputs for regressor [TFBM case: d03]  
  uxtemp1d04 = dsimtemp(ux,d04,delta1);  // generate LM inputs for regressor [TFBM case: d04]   
      
  uxtemp3d0 = dsimtemp(ux,d0,delta3);  // generate LM inputs for regressor [TFBM case: d0]   
  uxtemp3d01 = dsimtemp(ux,d01,delta3);  // generate LM inputs for regressor [TFBM case: d01]  
  uxtemp3d03 = dsimtemp(ux,d03,delta3);  // generate LM inputs for regressor [TFBM case: d03]  
  uxtemp3d04 = dsimtemp(ux,d04,delta3);  // generate LM inputs for regressor [TFBM case: d04]      
      
 //x and y
 xtemp1d0   = recserar(uxtemp1d0,uxtemp1d0[1],1);  // regressor is partial sum of LM inputs [TFBM case--d0]
 ysintemp1d0 = sin(pi*xtemp1d0)-sin(2*pi*xtemp1d0)/4+sin(3*pi*xtemp1d0)/9-sin(4*pi*xtemp1d0)/16;
 ytemp1d0 = b*ysintemp1d0 + sig*uy;                // cointegrated regression equation [TFBM case--d0]   
      
 xtemp3d0   = recserar(uxtemp3d0,uxtemp3d0[1],1);  // regressor is partial sum of LM inputs [TFBM case--d0]
 ysintemp3d0 = sin(pi*xtemp3d0)-sin(2*pi*xtemp3d0)/4+sin(3*pi*xtemp3d0)/9-sin(4*pi*xtemp3d0)/16;
 ytemp3d0 = b*ysintemp3d0 + sig*uy;                // cointegrated regression equation [TFBM case--d0]      
      
      
 xtemp1d01   = recserar(uxtemp1d01,uxtemp1d01[1],1);  // regressor is partial sum of LM inputs [TFBM case--d01]
 ysintemp1d01 = sin(pi*xtemp1d01)-sin(2*pi*xtemp1d01)/4+sin(3*pi*xtemp1d01)/9-sin(4*pi*xtemp1d01)/16;
 ytemp1d01 = b*ysintemp1d01 + sig*uy;                // cointegrated regression equation [TFBM case--d01]
 
 xtemp3d01   = recserar(uxtemp3d01,uxtemp3d01[1],1);  // regressor is partial sum of LM inputs [TFBM case--d01]
 ysintemp3d01 = sin(pi*xtemp3d01)-sin(2*pi*xtemp3d01)/4+sin(3*pi*xtemp3d01)/9-sin(4*pi*xtemp3d01)/16;
 ytemp3d01 = b*ysintemp3d01 + sig*uy;                // cointegrated regression equation [TFBM case--d01]
 

 xtemp1d03   = recserar(uxtemp1d03,uxtemp1d03[1],1);  // regressor is partial sum of LM inputs [TFBM case--d03]
 ysintemp1d03 = sin(pi*xtemp1d03)-sin(2*pi*xtemp1d03)/4+sin(3*pi*xtemp1d03)/9-sin(4*pi*xtemp1d03)/16;
 ytemp1d03 = b*ysintemp1d03 + sig*uy;                // cointegrated regression equation [TFBM case--d03]
 
 xtemp3d03   = recserar(uxtemp3d03,uxtemp3d03[1],1);  // regressor is partial sum of LM inputs [TFBM case--d03]
 ysintemp3d03 = sin(pi*xtemp3d03)-sin(2*pi*xtemp3d03)/4+sin(3*pi*xtemp3d03)/9-sin(4*pi*xtemp3d03)/16;
 ytemp3d03 = b*ysintemp3d03 + sig*uy;                // cointegrated regression equation [TFBM case--d03]
 

 xtemp1d04   = recserar(uxtemp1d04,uxtemp1d04[1],1);  // regressor is partial sum of LM inputs [TFBM case--d04]
 ysintemp1d04 = sin(pi*xtemp1d04)-sin(2*pi*xtemp1d04)/4+sin(3*pi*xtemp1d04)/9-sin(4*pi*xtemp1d04)/16;
 ytemp1d04 = b*ysintemp1d04 + sig*uy;                // cointegrated regression equation [TFBM case--d04]
 
 xtemp3d04   = recserar(uxtemp3d04,uxtemp3d04[1],1);  // regressor is partial sum of LM inputs [TFBM case--d04]
 ysintemp3d04 = sin(pi*xtemp3d04)-sin(2*pi*xtemp3d04)/4+sin(3*pi*xtemp3d04)/9-sin(4*pi*xtemp3d04)/16;
 ytemp3d04 = b*ysintemp3d04 + sig*uy;                // cointegrated regression equation [TFBM case--d04]
      
      
  //raw case [for the comparison] 
  xf  = seqa(0,1/nm,nm); //interval [0,1]
  yff = sin(pi*xf)-sin(2*pi*xf)/4+sin(3*pi*xf)/9-sin(4*pi*xf)/16;
  
  //minimization [TFBM case]
  thetaN_temp1d0 = QNminimize(ytemp1d0,xtemp1d0);
  thetaN_temp1d01 = QNminimize(ytemp1d01,xtemp1d01);
  thetaN_temp1d03 = QNminimize(ytemp1d03,xtemp1d03);
  thetaN_temp1d04 = QNminimize(ytemp1d04,xtemp1d04);
  
  thetaN_temp3d0 = QNminimize(ytemp3d0,xtemp3d0);
  thetaN_temp3d01 = QNminimize(ytemp3d01,xtemp3d01);
  thetaN_temp3d03 = QNminimize(ytemp3d03,xtemp3d03);
  thetaN_temp3d04 = QNminimize(ytemp3d04,xtemp3d04);
  
      
  {sigma2N_temp1d0} = SIGMA2_N(ytemp1d0,xtemp1d0,xf,thetaN_temp1d0,hpower);  
  {sigma2N_temp1d01} = SIGMA2_N(ytemp1d01,xtemp1d01,xf,thetaN_temp1d01,hpower);  
  {sigma2N_temp1d03} = SIGMA2_N(ytemp1d03,xtemp1d03,xf,thetaN_temp1d03,hpower);  
  {sigma2N_temp1d04} = SIGMA2_N(ytemp1d04,xtemp1d04,xf,thetaN_temp1d04,hpower);  
  
  {sigma2N_temp3d0} = SIGMA2_N(ytemp3d0,xtemp3d0,xf,thetaN_temp3d0,hpower);  
  {sigma2N_temp3d01} = SIGMA2_N(ytemp3d01,xtemp3d01,xf,thetaN_temp3d01,hpower);  
  {sigma2N_temp3d03} = SIGMA2_N(ytemp3d03,xtemp3d03,xf,thetaN_temp3d03,hpower);  
  {sigma2N_temp3d04} = SIGMA2_N(ytemp3d04,xtemp3d04,xf,thetaN_temp3d04,hpower);  
  
  
  {ghattemp1d0,denomtemp1d0} = kregepan(ytemp1d0,xtemp1d0,xf,hpower); 
  {ghattemp1d01,denomtemp1d01} = kregepan(ytemp1d01,xtemp1d01,xf,hpower);
  {ghattemp1d03,denomtemp1d03} = kregepan(ytemp1d03,xtemp1d03,xf,hpower);
  {ghattemp1d04,denomtemp1d04} = kregepan(ytemp1d04,xtemp1d04,xf,hpower);
  
  {ghattemp3d0,denomtemp3d0} = kregepan(ytemp3d0,xtemp3d0,xf,hpower); 
  {ghattemp3d01,denomtemp3d01} = kregepan(ytemp3d01,xtemp3d01,xf,hpower);
  {ghattemp3d03,denomtemp3d03} = kregepan(ytemp3d03,xtemp3d03,xf,hpower);
  {ghattemp3d04,denomtemp3d04} = kregepan(ytemp3d04,xtemp3d04,xf,hpower);
  
  
  {denom_CI_temp1d0}  = krdensity(xtemp1d0,xf,hpower);
  {denom_CI_temp1d01}  = krdensity(xtemp1d01,xf,hpower);
  {denom_CI_temp1d03}  = krdensity(xtemp1d03,xf,hpower);
  {denom_CI_temp1d04}  = krdensity(xtemp1d04,xf,hpower);
  
  {denom_CI_temp3d0}  = krdensity(xtemp3d0,xf,hpower);
  {denom_CI_temp3d01}  = krdensity(xtemp3d01,xf,hpower);
  {denom_CI_temp3d03}  = krdensity(xtemp3d03,xf,hpower);
  {denom_CI_temp3d04}  = krdensity(xtemp3d04,xf,hpower);
          
   
gdevn_temp1d0[k,.] = yff'-ghattemp1d0';
gghat_temp1d0[k,.] = ghattemp1d0';
denom_gghat_temp1d0[k,.] = denom_CI_temp1d0';
SIGMA2f_temp1d0[k,.]= sigma2N_temp1d0';

gdevn_temp3d0[k,.] = yff'-ghattemp3d0';
gghat_temp3d0[k,.] = ghattemp3d0';
denom_gghat_temp3d0[k,.] = denom_CI_temp3d0';
SIGMA2f_temp3d0[k,.]= sigma2N_temp3d0';


gdevn_temp1d01[k,.] = yff'-ghattemp1d01';
gghat_temp1d01[k,.] = ghattemp1d01';
denom_gghat_temp1d01[k,.] = denom_CI_temp1d01';
SIGMA2f_temp1d01[k,.]= sigma2N_temp1d01';

gdevn_temp3d01[k,.] = yff'-ghattemp3d01';
gghat_temp3d01[k,.] = ghattemp3d01';
denom_gghat_temp3d01[k,.] = denom_CI_temp3d01';
SIGMA2f_temp3d01[k,.]= sigma2N_temp3d01';


gdevn_temp1d03[k,.] = yff'-ghattemp1d03';
gghat_temp1d03[k,.] = ghattemp1d03';
denom_gghat_temp1d03[k,.] = denom_CI_temp1d03';
SIGMA2f_temp1d03[k,.]= sigma2N_temp1d03';

gdevn_temp3d03[k,.] = yff'-ghattemp3d03';
gghat_temp3d03[k,.] = ghattemp3d03';
denom_gghat_temp3d03[k,.] = denom_CI_temp3d03';
SIGMA2f_temp3d03[k,.]= sigma2N_temp3d03';


gdevn_temp1d04[k,.] = yff'-ghattemp1d04';
gghat_temp1d04[k,.] = ghattemp1d04';
denom_gghat_temp1d04[k,.] = denom_CI_temp1d04';
SIGMA2f_temp1d04[k,.]= sigma2N_temp1d04';

gdevn_temp3d04[k,.] = yff'-ghattemp3d04';
gghat_temp3d04[k,.] = ghattemp3d04';
denom_gghat_temp3d04[k,.] = denom_CI_temp3d04';
SIGMA2f_temp3d04[k,.]= sigma2N_temp3d04';

  k = k+1;
  endo;  

/*
summary statistics for table TFBM
*/
 /***** d0 *****/
 gghat_temp1d0 = packr(gghat_temp1d0);
 gdevn_temp1d0 = packr(gdevn_temp1d0);
 meandevg_temp1d0 = meanc(gdevn_temp1d0);
 stdg_temp1d0     = stdc(gdevn_temp1d0);
 meanghat_temp1d0 = meanc(gghat_temp1d0);
 denom_gghat_temp1d0 = packr(denom_gghat_temp1d0);
 denom_gghat_temp1d0 = denom_gghat_temp1d0[1:rows(gghat_temp1d0),1:cols(denom_gghat_temp1d0)]; 
 meandenom_gghat_temp1d0 = meanc(denom_gghat_temp1d0); 
 SIGMA2f_temp1d0 = packr(SIGMA2f_temp1d0);
 SIGMA2f_temp1d0 = SIGMA2f_temp1d0[1:rows(gghat_temp1d0),1:cols(denom_gghat_temp1d0)]; 
 meanSIGMA2f_temp1d0 = meanc(SIGMA2f_temp1d0); 
  
 gghat_temp3d0 = packr(gghat_temp3d0);
 gdevn_temp3d0 = packr(gdevn_temp3d0);
 meandevg_temp3d0 = meanc(gdevn_temp3d0);
 stdg_temp3d0     = stdc(gdevn_temp3d0);
 meanghat_temp3d0 = meanc(gghat_temp3d0);
 denom_gghat_temp3d0 = packr(denom_gghat_temp3d0);
 denom_gghat_temp3d0 = denom_gghat_temp3d0[1:rows(gghat_temp3d0),1:cols(denom_gghat_temp3d0)]; 
 meandenom_gghat_temp3d0 = meanc(denom_gghat_temp3d0); 
 SIGMA2f_temp3d0 = packr(SIGMA2f_temp3d0);
 SIGMA2f_temp3d0 = SIGMA2f_temp3d0[1:rows(gghat_temp3d0),1:cols(denom_gghat_temp3d0)]; 
 meanSIGMA2f_temp3d0 = meanc(SIGMA2f_temp3d0);  
  
  
 /* Power of Test for point 0 */ 
  CI_uptemp1d0_1 = zeros(rows(gghat_temp1d0),1);
  CI_lowtemp1d0_1 = zeros(rows(gghat_temp1d0),1);
  Inclusiontemp1d0_1 = zeros(rows(gghat_temp1d0),1);
  
  k = 1;
  do until k > rows(gghat_temp1d0); 
  
  CI_uptemp1d0_1[k,1] = gghat_temp1d0[k,1]+1.96*sqrt((SIGMA2f_temp1d0[k,1]*0.3) ./ (0.5*denom_gghat_temp1d0[k,1]));
  CI_lowtemp1d0_1[k,1] = gghat_temp1d0[k,1]-1.96*sqrt((SIGMA2f_temp1d0[k,1]*0.3) ./ (0.5*denom_gghat_temp1d0[k,1]));   
  Inclusiontemp1d0_1[k,1] = 0.125>=CI_lowtemp1d0_1[k,1] and 0.125<=CI_uptemp1d0_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d0_1 = 100*(1-meanc(Inclusiontemp1d0_1)); /* power of the test in percentage */
 
  CI_uptemp3d0_1 = zeros(rows(gghat_temp3d0),1);
  CI_lowtemp3d0_1 = zeros(rows(gghat_temp3d0),1);
  Inclusiontemp3d0_1 = zeros(rows(gghat_temp3d0),1);
  
  k = 1;
  do until k > rows(gghat_temp3d0); 
  
  CI_uptemp3d0_1[k,1] = gghat_temp3d0[k,1]+1.96*sqrt((SIGMA2f_temp3d0[k,1]*0.3) ./ (0.5*denom_gghat_temp3d0[k,1]));
  CI_lowtemp3d0_1[k,1] = gghat_temp3d0[k,1]-1.96*sqrt((SIGMA2f_temp3d0[k,1]*0.3) ./ (0.5*denom_gghat_temp3d0[k,1]));   
  Inclusiontemp3d0_1[k,1] = 0.125>=CI_lowtemp3d0_1[k,1] and 0.125<=CI_uptemp3d0_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d0_1 = 100*(1-meanc(Inclusiontemp3d0_1)); /* power of the test in percentage */
 
 
 /* Power Calculation for point 0.25 */  
  CI_uptemp1d0_26 = zeros(rows(gghat_temp1d0),1);
  CI_lowtemp1d0_26 = zeros(rows(gghat_temp1d0),1);
  Inclusiontemp1d0_26 = zeros(rows(gghat_temp1d0),1);
  
  k = 1;
  do until k > rows(gghat_temp1d0); 
  
  CI_uptemp1d0_26[k,1] = gghat_temp1d0[k,26]+1.96*sqrt((SIGMA2f_temp1d0[k,26]*0.3) ./ (0.5*denom_gghat_temp1d0[k,26]));
  CI_lowtemp1d0_26[k,1] = gghat_temp1d0[k,26]-1.96*sqrt((SIGMA2f_temp1d0[k,26]*0.3) ./ (0.5*denom_gghat_temp1d0[k,26]));   
  Inclusiontemp1d0_26[k,1] = 0.141>=CI_lowtemp1d0_26[k,1] and 0.141<=CI_uptemp1d0_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d0_26 = 100*(1-meanc(Inclusiontemp1d0_26)); /* power of the test in percentage */
 
  CI_uptemp3d0_26 = zeros(rows(gghat_temp3d0),1);
  CI_lowtemp3d0_26 = zeros(rows(gghat_temp3d0),1);
  Inclusiontemp3d0_26 = zeros(rows(gghat_temp3d0),1);
  
  k = 1;
  do until k > rows(gghat_temp3d0); 
  
  CI_uptemp3d0_26[k,1] = gghat_temp3d0[k,26]+1.96*sqrt((SIGMA2f_temp3d0[k,26]*0.3) ./ (0.5*denom_gghat_temp3d0[k,26]));
  CI_lowtemp3d0_26[k,1] = gghat_temp3d0[k,26]-1.96*sqrt((SIGMA2f_temp3d0[k,26]*0.3) ./ (0.5*denom_gghat_temp3d0[k,26]));   
  Inclusiontemp3d0_26[k,1] = 0.141>=CI_lowtemp3d0_26[k,1] and 0.141<=CI_uptemp3d0_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d0_26 = 100*(1-meanc(Inclusiontemp3d0_26)); /* power of the test in percentage */
 

 /* Power Calculation for point 0.5 */   
  CI_uptemp1d0_51 = zeros(rows(gghat_temp1d0),1);
  CI_lowtemp1d0_51 = zeros(rows(gghat_temp1d0),1);
  Inclusiontemp1d0_51 = zeros(rows(gghat_temp1d0),1);
  
  k = 1;
  do until k > rows(gghat_temp1d0); 
  
  CI_uptemp1d0_51[k,1] = gghat_temp1d0[k,51]+1.96*sqrt((SIGMA2f_temp1d0[k,51]*0.3) ./ (0.5*denom_gghat_temp1d0[k,51]));
  CI_lowtemp1d0_51[k,1] = gghat_temp1d0[k,51]-1.96*sqrt((SIGMA2f_temp1d0[k,51]*0.3) ./ (0.5*denom_gghat_temp1d0[k,51]));   
  Inclusiontemp1d0_51[k,1] = 0.156>=CI_lowtemp1d0_51[k,1] and 0.156<=CI_uptemp1d0_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d0_51 = 100*(1-meanc(Inclusiontemp1d0_51)); /* power of the test in percentage */
 
  CI_uptemp3d0_51 = zeros(rows(gghat_temp3d0),1);
  CI_lowtemp3d0_51 = zeros(rows(gghat_temp3d0),1);
  Inclusiontemp3d0_51 = zeros(rows(gghat_temp3d0),1);
  
  k = 1;
  do until k > rows(gghat_temp3d0); 
  
  CI_uptemp3d0_51[k,1] = gghat_temp3d0[k,51]+1.96*sqrt((SIGMA2f_temp3d0[k,51]*0.3) ./ (0.5*denom_gghat_temp3d0[k,51]));
  CI_lowtemp3d0_51[k,1] = gghat_temp3d0[k,51]-1.96*sqrt((SIGMA2f_temp3d0[k,51]*0.3) ./ (0.5*denom_gghat_temp3d0[k,51]));   
  Inclusiontemp3d0_51[k,1] = 0.156>=CI_lowtemp3d0_51[k,1] and 0.156<=CI_uptemp3d0_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d0_51 = 100*(1-meanc(Inclusiontemp3d0_51)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.75 */  
  CI_uptemp1d0_76 = zeros(rows(gghat_temp1d0),1);
  CI_lowtemp1d0_76 = zeros(rows(gghat_temp1d0),1);
  Inclusiontemp1d0_76 = zeros(rows(gghat_temp1d0),1);
  
  k = 1;
  do until k > rows(gghat_temp1d0); 
  
  CI_uptemp1d0_76[k,1] = gghat_temp1d0[k,76]+1.96*sqrt((SIGMA2f_temp1d0[k,76]*0.3) ./ (0.5*denom_gghat_temp1d0[k,76]));
  CI_lowtemp1d0_76[k,1] = gghat_temp1d0[k,76]-1.96*sqrt((SIGMA2f_temp1d0[k,76]*0.3) ./ (0.5*denom_gghat_temp1d0[k,76]));   
  Inclusiontemp1d0_76[k,1] = 0.170>=CI_lowtemp1d0_76[k,1] and 0.170<=CI_uptemp1d0_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d0_76 = 100*(1-meanc(Inclusiontemp1d0_76)); /* power of the test in percentage */
 
  CI_uptemp3d0_76 = zeros(rows(gghat_temp3d0),1);
  CI_lowtemp3d0_76 = zeros(rows(gghat_temp3d0),1);
  Inclusiontemp3d0_76 = zeros(rows(gghat_temp3d0),1);
  
  k = 1;
  do until k > rows(gghat_temp3d0); 
  
  CI_uptemp3d0_76[k,1] = gghat_temp3d0[k,76]+1.96*sqrt((SIGMA2f_temp3d0[k,76]*0.3) ./ (0.5*denom_gghat_temp3d0[k,76]));
  CI_lowtemp3d0_76[k,1] = gghat_temp3d0[k,76]-1.96*sqrt((SIGMA2f_temp3d0[k,76]*0.3) ./ (0.5*denom_gghat_temp3d0[k,76]));   
  Inclusiontemp3d0_76[k,1] = 0.170>=CI_lowtemp3d0_76[k,1] and 0.170<=CI_uptemp3d0_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d0_76 = 100*(1-meanc(Inclusiontemp3d0_76)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.95 */  
  CI_uptemp1d0_96 = zeros(rows(gghat_temp1d0),1);
  CI_lowtemp1d0_96 = zeros(rows(gghat_temp1d0),1);
  Inclusiontemp1d0_96 = zeros(rows(gghat_temp1d0),1);
  
  k = 1;
  do until k > rows(gghat_temp1d0); 
  
  CI_uptemp1d0_96[k,1] = gghat_temp1d0[k,96]+1.96*sqrt((SIGMA2f_temp1d0[k,96]*0.3) ./ (0.5*denom_gghat_temp1d0[k,96]));
  CI_lowtemp1d0_96[k,1] = gghat_temp1d0[k,96]-1.96*sqrt((SIGMA2f_temp1d0[k,96]*0.3) ./ (0.5*denom_gghat_temp1d0[k,96]));   
  Inclusiontemp1d0_96[k,1] = 0.180>=CI_lowtemp1d0_96[k,1] and 0.180<=CI_uptemp1d0_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d0_96 = 100*(1-meanc(Inclusiontemp1d0_96)); /* power of the test in percentage */
 
  CI_uptemp3d0_96 = zeros(rows(gghat_temp3d0),1);
  CI_lowtemp3d0_96 = zeros(rows(gghat_temp3d0),1);
  Inclusiontemp3d0_96 = zeros(rows(gghat_temp3d0),1);
  
  k = 1;
  do until k > rows(gghat_temp3d0); 
  
  CI_uptemp3d0_96[k,1] = gghat_temp3d0[k,96]+1.96*sqrt((SIGMA2f_temp3d0[k,96]*0.3) ./ (0.5*denom_gghat_temp3d0[k,96]));
  CI_lowtemp3d0_96[k,1] = gghat_temp3d0[k,96]-1.96*sqrt((SIGMA2f_temp3d0[k,96]*0.3) ./ (0.5*denom_gghat_temp3d0[k,96]));   
  Inclusiontemp3d0_96[k,1] = 0.180>=CI_lowtemp3d0_96[k,1] and 0.180<=CI_uptemp3d0_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d0_96 = 100*(1-meanc(Inclusiontemp3d0_96)); /* power of the test in percentage */ 
  
 NotInclusiontemp1d0_1~NotInclusiontemp1d0_26~NotInclusiontemp1d0_51~NotInclusiontemp1d0_76~NotInclusiontemp1d0_96; /* print the results */ 
 
 NotInclusiontemp3d0_1~NotInclusiontemp3d0_26~NotInclusiontemp3d0_51~NotInclusiontemp3d0_76~NotInclusiontemp3d0_96;  /* print the results */ 
 
 /***** d01 *****/
 gghat_temp1d01 = packr(gghat_temp1d01);
 gdevn_temp1d01 = packr(gdevn_temp1d01);
 meandevg_temp1d01 = meanc(gdevn_temp1d01);
 stdg_temp1d01     = stdc(gdevn_temp1d01);
 meanghat_temp1d01 = meanc(gghat_temp1d01);
 denom_gghat_temp1d01 = packr(denom_gghat_temp1d01);
 denom_gghat_temp1d01 = denom_gghat_temp1d01[1:rows(gghat_temp1d01),1:cols(denom_gghat_temp1d01)]; 
 meandenom_gghat_temp1d01 = meanc(denom_gghat_temp1d01); 
 SIGMA2f_temp1d01 = packr(SIGMA2f_temp1d01);
 SIGMA2f_temp1d01 = SIGMA2f_temp1d01[1:rows(gghat_temp1d01),1:cols(denom_gghat_temp1d01)]; 
 meanSIGMA2f_temp1d01 = meanc(SIGMA2f_temp1d01); 
  
 gghat_temp3d01 = packr(gghat_temp3d01);
 gdevn_temp3d01 = packr(gdevn_temp3d01);
 meandevg_temp3d01 = meanc(gdevn_temp3d01);
 stdg_temp3d01     = stdc(gdevn_temp3d01);
 meanghat_temp3d01 = meanc(gghat_temp3d01);
 denom_gghat_temp3d01 = packr(denom_gghat_temp3d01);
 denom_gghat_temp3d01 = denom_gghat_temp3d01[1:rows(gghat_temp3d01),1:cols(denom_gghat_temp3d01)]; 
 meandenom_gghat_temp3d01 = meanc(denom_gghat_temp3d01); 
 SIGMA2f_temp3d01 = packr(SIGMA2f_temp3d01);
 SIGMA2f_temp3d01 = SIGMA2f_temp3d01[1:rows(gghat_temp3d01),1:cols(denom_gghat_temp3d01)]; 
 meanSIGMA2f_temp3d01 = meanc(SIGMA2f_temp3d01);  
  
  
 /* Power of Test for point 0 */ 
  CI_uptemp1d01_1 = zeros(rows(gghat_temp1d01),1);
  CI_lowtemp1d01_1 = zeros(rows(gghat_temp1d01),1);
  Inclusiontemp1d01_1 = zeros(rows(gghat_temp1d01),1);
  
  k = 1;
  do until k > rows(gghat_temp1d01); 
  
  CI_uptemp1d01_1[k,1] = gghat_temp1d01[k,1]+1.96*sqrt((SIGMA2f_temp1d01[k,1]*0.3) ./ (0.5*denom_gghat_temp1d01[k,1]));
  CI_lowtemp1d01_1[k,1] = gghat_temp1d01[k,1]-1.96*sqrt((SIGMA2f_temp1d01[k,1]*0.3) ./ (0.5*denom_gghat_temp1d01[k,1]));   
  Inclusiontemp1d01_1[k,1] = 0.125>=CI_lowtemp1d01_1[k,1] and 0.125<=CI_uptemp1d01_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d01_1 = 100*(1-meanc(Inclusiontemp1d01_1)); /* power of the test in percentage */
 
  CI_uptemp3d01_1 = zeros(rows(gghat_temp3d01),1);
  CI_lowtemp3d01_1 = zeros(rows(gghat_temp3d01),1);
  Inclusiontemp3d01_1 = zeros(rows(gghat_temp3d01),1);
  
  k = 1;
  do until k > rows(gghat_temp3d01); 
  
  CI_uptemp3d01_1[k,1] = gghat_temp3d01[k,1]+1.96*sqrt((SIGMA2f_temp3d01[k,1]*0.3) ./ (0.5*denom_gghat_temp3d01[k,1]));
  CI_lowtemp3d01_1[k,1] = gghat_temp3d01[k,1]-1.96*sqrt((SIGMA2f_temp3d01[k,1]*0.3) ./ (0.5*denom_gghat_temp3d01[k,1]));   
  Inclusiontemp3d01_1[k,1] = 0.125>=CI_lowtemp3d01_1[k,1] and 0.125<=CI_uptemp3d01_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d01_1 = 100*(1-meanc(Inclusiontemp3d01_1)); /* power of the test in percentage */
 
 
 /* Power Calculation for point 0.25 */  
  CI_uptemp1d01_26 = zeros(rows(gghat_temp1d01),1);
  CI_lowtemp1d01_26 = zeros(rows(gghat_temp1d01),1);
  Inclusiontemp1d01_26 = zeros(rows(gghat_temp1d01),1);
  
  k = 1;
  do until k > rows(gghat_temp1d01); 
  
  CI_uptemp1d01_26[k,1] = gghat_temp1d01[k,26]+1.96*sqrt((SIGMA2f_temp1d01[k,26]*0.3) ./ (0.5*denom_gghat_temp1d01[k,26]));
  CI_lowtemp1d01_26[k,1] = gghat_temp1d01[k,26]-1.96*sqrt((SIGMA2f_temp1d01[k,26]*0.3) ./ (0.5*denom_gghat_temp1d01[k,26]));   
  Inclusiontemp1d01_26[k,1] = 0.141>=CI_lowtemp1d01_26[k,1] and 0.141<=CI_uptemp1d01_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d01_26 = 100*(1-meanc(Inclusiontemp1d01_26)); /* power of the test in percentage */
 
  CI_uptemp3d01_26 = zeros(rows(gghat_temp3d01),1);
  CI_lowtemp3d01_26 = zeros(rows(gghat_temp3d01),1);
  Inclusiontemp3d01_26 = zeros(rows(gghat_temp3d01),1);
  
  k = 1;
  do until k > rows(gghat_temp3d01); 
  
  CI_uptemp3d01_26[k,1] = gghat_temp3d01[k,26]+1.96*sqrt((SIGMA2f_temp3d01[k,26]*0.3) ./ (0.5*denom_gghat_temp3d01[k,26]));
  CI_lowtemp3d01_26[k,1] = gghat_temp3d01[k,26]-1.96*sqrt((SIGMA2f_temp3d01[k,26]*0.3) ./ (0.5*denom_gghat_temp3d01[k,26]));   
  Inclusiontemp3d01_26[k,1] = 0.141>=CI_lowtemp3d01_26[k,1] and 0.141<=CI_uptemp3d01_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d01_26 = 100*(1-meanc(Inclusiontemp3d01_26)); /* power of the test in percentage */
 

 /* Power Calculation for point 0.5 */   
  CI_uptemp1d01_51 = zeros(rows(gghat_temp1d01),1);
  CI_lowtemp1d01_51 = zeros(rows(gghat_temp1d01),1);
  Inclusiontemp1d01_51 = zeros(rows(gghat_temp1d01),1);
  
  k = 1;
  do until k > rows(gghat_temp1d01); 
  
  CI_uptemp1d01_51[k,1] = gghat_temp1d01[k,51]+1.96*sqrt((SIGMA2f_temp1d01[k,51]*0.3) ./ (0.5*denom_gghat_temp1d01[k,51]));
  CI_lowtemp1d01_51[k,1] = gghat_temp1d01[k,51]-1.96*sqrt((SIGMA2f_temp1d01[k,51]*0.3) ./ (0.5*denom_gghat_temp1d01[k,51]));   
  Inclusiontemp1d01_51[k,1] = 0.156>=CI_lowtemp1d01_51[k,1] and 0.156<=CI_uptemp1d01_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d01_51 = 100*(1-meanc(Inclusiontemp1d01_51)); /* power of the test in percentage */
 
  CI_uptemp3d01_51 = zeros(rows(gghat_temp3d01),1);
  CI_lowtemp3d01_51 = zeros(rows(gghat_temp3d01),1);
  Inclusiontemp3d01_51 = zeros(rows(gghat_temp3d01),1);
  
  k = 1;
  do until k > rows(gghat_temp3d01); 
  
  CI_uptemp3d01_51[k,1] = gghat_temp3d01[k,51]+1.96*sqrt((SIGMA2f_temp3d01[k,51]*0.3) ./ (0.5*denom_gghat_temp3d01[k,51]));
  CI_lowtemp3d01_51[k,1] = gghat_temp3d01[k,51]-1.96*sqrt((SIGMA2f_temp3d01[k,51]*0.3) ./ (0.5*denom_gghat_temp3d01[k,51]));   
  Inclusiontemp3d01_51[k,1] = 0.156>=CI_lowtemp3d01_51[k,1] and 0.156<=CI_uptemp3d01_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d01_51 = 100*(1-meanc(Inclusiontemp3d01_51)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.75 */  
  CI_uptemp1d01_76 = zeros(rows(gghat_temp1d01),1);
  CI_lowtemp1d01_76 = zeros(rows(gghat_temp1d01),1);
  Inclusiontemp1d01_76 = zeros(rows(gghat_temp1d01),1);
  
  k = 1;
  do until k > rows(gghat_temp1d01); 
  
  CI_uptemp1d01_76[k,1] = gghat_temp1d01[k,76]+1.96*sqrt((SIGMA2f_temp1d01[k,76]*0.3) ./ (0.5*denom_gghat_temp1d01[k,76]));
  CI_lowtemp1d01_76[k,1] = gghat_temp1d01[k,76]-1.96*sqrt((SIGMA2f_temp1d01[k,76]*0.3) ./ (0.5*denom_gghat_temp1d01[k,76]));   
  Inclusiontemp1d01_76[k,1] = 0.170>=CI_lowtemp1d01_76[k,1] and 0.170<=CI_uptemp1d01_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d01_76 = 100*(1-meanc(Inclusiontemp1d01_76)); /* power of the test in percentage */
 
  CI_uptemp3d01_76 = zeros(rows(gghat_temp3d01),1);
  CI_lowtemp3d01_76 = zeros(rows(gghat_temp3d01),1);
  Inclusiontemp3d01_76 = zeros(rows(gghat_temp3d01),1);
  
  k = 1;
  do until k > rows(gghat_temp3d01); 
  
  CI_uptemp3d01_76[k,1] = gghat_temp3d01[k,76]+1.96*sqrt((SIGMA2f_temp3d01[k,76]*0.3) ./ (0.5*denom_gghat_temp3d01[k,76]));
  CI_lowtemp3d01_76[k,1] = gghat_temp3d01[k,76]-1.96*sqrt((SIGMA2f_temp3d01[k,76]*0.3) ./ (0.5*denom_gghat_temp3d01[k,76]));   
  Inclusiontemp3d01_76[k,1] = 0.170>=CI_lowtemp3d01_76[k,1] and 0.170<=CI_uptemp3d01_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d01_76 = 100*(1-meanc(Inclusiontemp3d01_76)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.95 */  
  CI_uptemp1d01_96 = zeros(rows(gghat_temp1d01),1);
  CI_lowtemp1d01_96 = zeros(rows(gghat_temp1d01),1);
  Inclusiontemp1d01_96 = zeros(rows(gghat_temp1d01),1);
  
  k = 1;
  do until k > rows(gghat_temp1d01); 
  
  CI_uptemp1d01_96[k,1] = gghat_temp1d01[k,96]+1.96*sqrt((SIGMA2f_temp1d01[k,96]*0.3) ./ (0.5*denom_gghat_temp1d01[k,96]));
  CI_lowtemp1d01_96[k,1] = gghat_temp1d01[k,96]-1.96*sqrt((SIGMA2f_temp1d01[k,96]*0.3) ./ (0.5*denom_gghat_temp1d01[k,96]));   
  Inclusiontemp1d01_96[k,1] = 0.180>=CI_lowtemp1d01_96[k,1] and 0.180<=CI_uptemp1d01_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d01_96 = 100*(1-meanc(Inclusiontemp1d01_96)); /* power of the test in percentage */
 
  CI_uptemp3d01_96 = zeros(rows(gghat_temp3d01),1);
  CI_lowtemp3d01_96 = zeros(rows(gghat_temp3d01),1);
  Inclusiontemp3d01_96 = zeros(rows(gghat_temp3d01),1);
  
  k = 1;
  do until k > rows(gghat_temp3d01); 
  
  CI_uptemp3d01_96[k,1] = gghat_temp3d01[k,96]+1.96*sqrt((SIGMA2f_temp3d01[k,96]*0.3) ./ (0.5*denom_gghat_temp3d01[k,96]));
  CI_lowtemp3d01_96[k,1] = gghat_temp3d01[k,96]-1.96*sqrt((SIGMA2f_temp3d01[k,96]*0.3) ./ (0.5*denom_gghat_temp3d01[k,96]));   
  Inclusiontemp3d01_96[k,1] = yff[1]>=CI_lowtemp3d01_96[k,1] and yff[1]<=CI_uptemp3d01_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d01_96 = 100*(1-meanc(Inclusiontemp3d01_96)); /* power of the test in percentage */ 
  
 NotInclusiontemp1d01_1~NotInclusiontemp1d01_26~NotInclusiontemp1d01_51~NotInclusiontemp1d01_76~NotInclusiontemp1d01_96; /* print the results */ 
 
 NotInclusiontemp3d01_1~NotInclusiontemp3d01_26~NotInclusiontemp3d01_51~NotInclusiontemp3d01_76~NotInclusiontemp3d01_96;  /* print the results */ 
 
  
 /***** d03 *****/
 gghat_temp1d03 = packr(gghat_temp1d03);
 gdevn_temp1d03 = packr(gdevn_temp1d03);
 meandevg_temp1d03 = meanc(gdevn_temp1d03);
 stdg_temp1d03     = stdc(gdevn_temp1d03);
 meanghat_temp1d03 = meanc(gghat_temp1d03);
 denom_gghat_temp1d03 = packr(denom_gghat_temp1d03);
 denom_gghat_temp1d03 = denom_gghat_temp1d03[1:rows(gghat_temp1d03),1:cols(denom_gghat_temp1d03)]; 
 meandenom_gghat_temp1d03 = meanc(denom_gghat_temp1d03); 
 SIGMA2f_temp1d03 = packr(SIGMA2f_temp1d03);
 SIGMA2f_temp1d03 = SIGMA2f_temp1d03[1:rows(gghat_temp1d03),1:cols(denom_gghat_temp1d03)]; 
 meanSIGMA2f_temp1d03 = meanc(SIGMA2f_temp1d03); 
  
 gghat_temp3d03 = packr(gghat_temp3d03);
 gdevn_temp3d03 = packr(gdevn_temp3d03);
 meandevg_temp3d03 = meanc(gdevn_temp3d03);
 stdg_temp3d03     = stdc(gdevn_temp3d03);
 meanghat_temp3d03 = meanc(gghat_temp3d03);
 denom_gghat_temp3d03 = packr(denom_gghat_temp3d03);
 denom_gghat_temp3d03 = denom_gghat_temp3d03[1:rows(gghat_temp3d03),1:cols(denom_gghat_temp3d03)]; 
 meandenom_gghat_temp3d03 = meanc(denom_gghat_temp3d03); 
 SIGMA2f_temp3d03 = packr(SIGMA2f_temp3d03);
 SIGMA2f_temp3d03 = SIGMA2f_temp3d03[1:rows(gghat_temp3d03),1:cols(denom_gghat_temp3d03)]; 
 meanSIGMA2f_temp3d03 = meanc(SIGMA2f_temp3d03);  
  
  
 /* Power of Test for point 0 */ 
  CI_uptemp1d03_1 = zeros(rows(gghat_temp1d03),1);
  CI_lowtemp1d03_1 = zeros(rows(gghat_temp1d03),1);
  Inclusiontemp1d03_1 = zeros(rows(gghat_temp1d03),1);
  
  k = 1;
  do until k > rows(gghat_temp1d03); 
  
  CI_uptemp1d03_1[k,1] = gghat_temp1d03[k,1]+1.96*sqrt((SIGMA2f_temp1d03[k,1]*0.3) ./ (0.5*denom_gghat_temp1d03[k,1]));
  CI_lowtemp1d03_1[k,1] = gghat_temp1d03[k,1]-1.96*sqrt((SIGMA2f_temp1d03[k,1]*0.3) ./ (0.5*denom_gghat_temp1d03[k,1]));   
  Inclusiontemp1d03_1[k,1] = 0.125>=CI_lowtemp1d03_1[k,1] and 0.125<=CI_uptemp1d03_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d03_1 = 100*(1-meanc(Inclusiontemp1d03_1)); /* power of the test in percentage */
 
  CI_uptemp3d03_1 = zeros(rows(gghat_temp3d03),1);
  CI_lowtemp3d03_1 = zeros(rows(gghat_temp3d03),1);
  Inclusiontemp3d03_1 = zeros(rows(gghat_temp3d03),1);
  
  k = 1;
  do until k > rows(gghat_temp3d03); 
  
  CI_uptemp3d03_1[k,1] = gghat_temp3d03[k,1]+1.96*sqrt((SIGMA2f_temp3d03[k,1]*0.3) ./ (0.5*denom_gghat_temp3d03[k,1]));
  CI_lowtemp3d03_1[k,1] = gghat_temp3d03[k,1]-1.96*sqrt((SIGMA2f_temp3d03[k,1]*0.3) ./ (0.5*denom_gghat_temp3d03[k,1]));   
  Inclusiontemp3d03_1[k,1] = 0.125>=CI_lowtemp3d03_1[k,1] and 0.125<=CI_uptemp3d03_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d03_1 = 100*(1-meanc(Inclusiontemp3d03_1)); /* power of the test in percentage */
 
 
 /* Power Calculation for point 0.25 */  
  CI_uptemp1d03_26 = zeros(rows(gghat_temp1d03),1);
  CI_lowtemp1d03_26 = zeros(rows(gghat_temp1d03),1);
  Inclusiontemp1d03_26 = zeros(rows(gghat_temp1d03),1);
  
  k = 1;
  do until k > rows(gghat_temp1d03); 
  
  CI_uptemp1d03_26[k,1] = gghat_temp1d03[k,26]+1.96*sqrt((SIGMA2f_temp1d03[k,26]*0.3) ./ (0.5*denom_gghat_temp1d03[k,26]));
  CI_lowtemp1d03_26[k,1] = gghat_temp1d03[k,26]-1.96*sqrt((SIGMA2f_temp1d03[k,26]*0.3) ./ (0.5*denom_gghat_temp1d03[k,26]));   
  Inclusiontemp1d03_26[k,1] = 0.141>=CI_lowtemp1d03_26[k,1] and 0.141<=CI_uptemp1d03_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d03_26 = 100*(1-meanc(Inclusiontemp1d03_26)); /* power of the test in percentage */
 
  CI_uptemp3d03_26 = zeros(rows(gghat_temp3d03),1);
  CI_lowtemp3d03_26 = zeros(rows(gghat_temp3d03),1);
  Inclusiontemp3d03_26 = zeros(rows(gghat_temp3d03),1);
  
  k = 1;
  do until k > rows(gghat_temp3d03); 
  
  CI_uptemp3d03_26[k,1] = gghat_temp3d03[k,26]+1.96*sqrt((SIGMA2f_temp3d03[k,26]*0.3) ./ (0.5*denom_gghat_temp3d03[k,26]));
  CI_lowtemp3d03_26[k,1] = gghat_temp3d03[k,26]-1.96*sqrt((SIGMA2f_temp3d03[k,26]*0.3) ./ (0.5*denom_gghat_temp3d03[k,26]));   
  Inclusiontemp3d03_26[k,1] = 0.141>=CI_lowtemp3d03_26[k,1] and 0.141<=CI_uptemp3d03_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d03_26 = 100*(1-meanc(Inclusiontemp3d03_26)); /* power of the test in percentage */
 

 /* Power Calculation for point 0.5 */   
  CI_uptemp1d03_51 = zeros(rows(gghat_temp1d03),1);
  CI_lowtemp1d03_51 = zeros(rows(gghat_temp1d03),1);
  Inclusiontemp1d03_51 = zeros(rows(gghat_temp1d03),1);
  
  k = 1;
  do until k > rows(gghat_temp1d03); 
  
  CI_uptemp1d03_51[k,1] = gghat_temp1d03[k,51]+1.96*sqrt((SIGMA2f_temp1d03[k,51]*0.3) ./ (0.5*denom_gghat_temp1d03[k,51]));
  CI_lowtemp1d03_51[k,1] = gghat_temp1d03[k,51]-1.96*sqrt((SIGMA2f_temp1d03[k,51]*0.3) ./ (0.5*denom_gghat_temp1d03[k,51]));   
  Inclusiontemp1d03_51[k,1] = 0.156>=CI_lowtemp1d03_51[k,1] and 0.156<=CI_uptemp1d03_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d03_51 = 100*(1-meanc(Inclusiontemp1d03_51)); /* power of the test in percentage */
 
  CI_uptemp3d03_51 = zeros(rows(gghat_temp3d03),1);
  CI_lowtemp3d03_51 = zeros(rows(gghat_temp3d03),1);
  Inclusiontemp3d03_51 = zeros(rows(gghat_temp3d03),1);
  
  k = 1;
  do until k > rows(gghat_temp3d03); 
  
  CI_uptemp3d03_51[k,1] = gghat_temp3d03[k,51]+1.96*sqrt((SIGMA2f_temp3d03[k,51]*0.3) ./ (0.5*denom_gghat_temp3d03[k,51]));
  CI_lowtemp3d03_51[k,1] = gghat_temp3d03[k,51]-1.96*sqrt((SIGMA2f_temp3d03[k,51]*0.3) ./ (0.5*denom_gghat_temp3d03[k,51]));   
  Inclusiontemp3d03_51[k,1] = 0.156>=CI_lowtemp3d03_51[k,1] and 0.156<=CI_uptemp3d03_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d03_51 = 100*(1-meanc(Inclusiontemp3d03_51)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.75 */  
  CI_uptemp1d03_76 = zeros(rows(gghat_temp1d03),1);
  CI_lowtemp1d03_76 = zeros(rows(gghat_temp1d03),1);
  Inclusiontemp1d03_76 = zeros(rows(gghat_temp1d03),1);
  
  k = 1;
  do until k > rows(gghat_temp1d03); 
  
  CI_uptemp1d03_76[k,1] = gghat_temp1d03[k,76]+1.96*sqrt((SIGMA2f_temp1d03[k,76]*0.3) ./ (0.5*denom_gghat_temp1d03[k,76]));
  CI_lowtemp1d03_76[k,1] = gghat_temp1d03[k,76]-1.96*sqrt((SIGMA2f_temp1d03[k,76]*0.3) ./ (0.5*denom_gghat_temp1d03[k,76]));   
  Inclusiontemp1d03_76[k,1] = 0.170>=CI_lowtemp1d03_76[k,1] and 0.170<=CI_uptemp1d03_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d03_76 = 100*(1-meanc(Inclusiontemp1d03_76)); /* power of the test in percentage */
 
  CI_uptemp3d03_76 = zeros(rows(gghat_temp3d03),1);
  CI_lowtemp3d03_76 = zeros(rows(gghat_temp3d03),1);
  Inclusiontemp3d03_76 = zeros(rows(gghat_temp3d03),1);
  
  k = 1;
  do until k > rows(gghat_temp3d03); 
  
  CI_uptemp3d03_76[k,1] = gghat_temp3d03[k,76]+1.96*sqrt((SIGMA2f_temp3d03[k,76]*0.3) ./ (0.5*denom_gghat_temp3d03[k,76]));
  CI_lowtemp3d03_76[k,1] = gghat_temp3d03[k,76]-1.96*sqrt((SIGMA2f_temp3d03[k,76]*0.3) ./ (0.5*denom_gghat_temp3d03[k,76]));   
  Inclusiontemp3d03_76[k,1] = 0.170>=CI_lowtemp3d03_76[k,1] and 0.170<=CI_uptemp3d03_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d03_76 = 100*(1-meanc(Inclusiontemp3d03_76)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.95 */  
  CI_uptemp1d03_96 = zeros(rows(gghat_temp1d03),1);
  CI_lowtemp1d03_96 = zeros(rows(gghat_temp1d03),1);
  Inclusiontemp1d03_96 = zeros(rows(gghat_temp1d03),1);
  
  k = 1;
  do until k > rows(gghat_temp1d03); 
  
  CI_uptemp1d03_96[k,1] = gghat_temp1d03[k,96]+1.96*sqrt((SIGMA2f_temp1d03[k,96]*0.3) ./ (0.5*denom_gghat_temp1d03[k,96]));
  CI_lowtemp1d03_96[k,1] = gghat_temp1d03[k,96]-1.96*sqrt((SIGMA2f_temp1d03[k,96]*0.3) ./ (0.5*denom_gghat_temp1d03[k,96]));   
  Inclusiontemp1d03_96[k,1] = 0.180>=CI_lowtemp1d03_96[k,1] and 0.180<=CI_uptemp1d03_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d03_96 = 100*(1-meanc(Inclusiontemp1d03_96)); /* power of the test in percentage */
 
  CI_uptemp3d03_96 = zeros(rows(gghat_temp3d03),1);
  CI_lowtemp3d03_96 = zeros(rows(gghat_temp3d03),1);
  Inclusiontemp3d03_96 = zeros(rows(gghat_temp3d03),1);
  
  k = 1;
  do until k > rows(gghat_temp3d03); 
  
  CI_uptemp3d03_96[k,1] = gghat_temp3d03[k,96]+1.96*sqrt((SIGMA2f_temp3d03[k,96]*0.3) ./ (0.5*denom_gghat_temp3d03[k,96]));
  CI_lowtemp3d03_96[k,1] = gghat_temp3d03[k,96]-1.96*sqrt((SIGMA2f_temp3d03[k,96]*0.3) ./ (0.5*denom_gghat_temp3d03[k,96]));   
  Inclusiontemp3d03_96[k,1] = 0.180>=CI_lowtemp3d03_96[k,1] and 0.180<=CI_uptemp3d03_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d03_96 = 100*(1-meanc(Inclusiontemp3d03_96)); /* power of the test in percentage */ 
  
 NotInclusiontemp1d03_1~NotInclusiontemp1d03_26~NotInclusiontemp1d03_51~NotInclusiontemp1d03_76~NotInclusiontemp1d03_96; /* print the results */ 
 
 NotInclusiontemp3d03_1~NotInclusiontemp3d03_26~NotInclusiontemp3d03_51~NotInclusiontemp3d03_76~NotInclusiontemp3d03_96;  /* print the results */ 
 

 /***** d04 *****/
 gghat_temp1d04 = packr(gghat_temp1d04);
 gdevn_temp1d04 = packr(gdevn_temp1d04);
 meandevg_temp1d04 = meanc(gdevn_temp1d04);
 stdg_temp1d04     = stdc(gdevn_temp1d04);
 meanghat_temp1d04 = meanc(gghat_temp1d04);
 denom_gghat_temp1d04 = packr(denom_gghat_temp1d04);
 denom_gghat_temp1d04 = denom_gghat_temp1d04[1:rows(gghat_temp1d04),1:cols(denom_gghat_temp1d04)]; 
 meandenom_gghat_temp1d04 = meanc(denom_gghat_temp1d04); 
 SIGMA2f_temp1d04 = packr(SIGMA2f_temp1d04);
 SIGMA2f_temp1d04 = SIGMA2f_temp1d04[1:rows(gghat_temp1d04),1:cols(denom_gghat_temp1d04)]; 
 meanSIGMA2f_temp1d04 = meanc(SIGMA2f_temp1d04); 
  
 gghat_temp3d04 = packr(gghat_temp3d04);
 gdevn_temp3d04 = packr(gdevn_temp3d04);
 meandevg_temp3d04 = meanc(gdevn_temp3d04);
 stdg_temp3d04     = stdc(gdevn_temp3d04);
 meanghat_temp3d04 = meanc(gghat_temp3d04);
 denom_gghat_temp3d04 = packr(denom_gghat_temp3d04);
 denom_gghat_temp3d04 = denom_gghat_temp3d04[1:rows(gghat_temp3d04),1:cols(denom_gghat_temp3d04)]; 
 meandenom_gghat_temp3d04 = meanc(denom_gghat_temp3d04); 
 SIGMA2f_temp3d04 = packr(SIGMA2f_temp3d04);
 SIGMA2f_temp3d04 = SIGMA2f_temp3d04[1:rows(gghat_temp3d04),1:cols(denom_gghat_temp3d04)]; 
 meanSIGMA2f_temp3d04 = meanc(SIGMA2f_temp3d04);  
  
  
 /* Power of Test for point 0 */ 
  CI_uptemp1d04_1 = zeros(rows(gghat_temp1d04),1);
  CI_lowtemp1d04_1 = zeros(rows(gghat_temp1d04),1);
  Inclusiontemp1d04_1 = zeros(rows(gghat_temp1d04),1);
  
  k = 1;
  do until k > rows(gghat_temp1d04); 
  
  CI_uptemp1d04_1[k,1] = gghat_temp1d04[k,1]+1.96*sqrt((SIGMA2f_temp1d04[k,1]*0.3) ./ (0.5*denom_gghat_temp1d04[k,1]));
  CI_lowtemp1d04_1[k,1] = gghat_temp1d04[k,1]-1.96*sqrt((SIGMA2f_temp1d04[k,1]*0.3) ./ (0.5*denom_gghat_temp1d04[k,1]));   
  Inclusiontemp1d04_1[k,1] = 0.125>=CI_lowtemp1d04_1[k,1] and 0.125<=CI_uptemp1d04_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d04_1 = 100*(1-meanc(Inclusiontemp1d04_1)); /* power of the test in percentage */
 
  CI_uptemp3d04_1 = zeros(rows(gghat_temp3d04),1);
  CI_lowtemp3d04_1 = zeros(rows(gghat_temp3d04),1);
  Inclusiontemp3d04_1 = zeros(rows(gghat_temp3d04),1);
  
  k = 1;
  do until k > rows(gghat_temp3d04); 
  
  CI_uptemp3d04_1[k,1] = gghat_temp3d04[k,1]+1.96*sqrt((SIGMA2f_temp3d04[k,1]*0.3) ./ (0.5*denom_gghat_temp3d04[k,1]));
  CI_lowtemp3d04_1[k,1] = gghat_temp3d04[k,1]-1.96*sqrt((SIGMA2f_temp3d04[k,1]*0.3) ./ (0.5*denom_gghat_temp3d04[k,1]));   
  Inclusiontemp3d04_1[k,1] = 0.125>=CI_lowtemp3d04_1[k,1] and 0.125<=CI_uptemp3d04_1[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d04_1 = 100*(1-meanc(Inclusiontemp3d04_1)); /* power of the test in percentage */
 
 
 /* Power Calculation for point 0.25 */  
  CI_uptemp1d04_26 = zeros(rows(gghat_temp1d04),1);
  CI_lowtemp1d04_26 = zeros(rows(gghat_temp1d04),1);
  Inclusiontemp1d04_26 = zeros(rows(gghat_temp1d04),1);
  
  k = 1;
  do until k > rows(gghat_temp1d04); 
  
  CI_uptemp1d04_26[k,1] = gghat_temp1d04[k,26]+1.96*sqrt((SIGMA2f_temp1d04[k,26]*0.3) ./ (0.5*denom_gghat_temp1d04[k,26]));
  CI_lowtemp1d04_26[k,1] = gghat_temp1d04[k,26]-1.96*sqrt((SIGMA2f_temp1d04[k,26]*0.3) ./ (0.5*denom_gghat_temp1d04[k,26]));   
  Inclusiontemp1d04_26[k,1] = 0.141>=CI_lowtemp1d04_26[k,1] and 0.141<=CI_uptemp1d04_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d04_26 = 100*(1-meanc(Inclusiontemp1d04_26)); /* power of the test in percentage */
 
  CI_uptemp3d04_26 = zeros(rows(gghat_temp3d04),1);
  CI_lowtemp3d04_26 = zeros(rows(gghat_temp3d04),1);
  Inclusiontemp3d04_26 = zeros(rows(gghat_temp3d04),1);
  
  k = 1;
  do until k > rows(gghat_temp3d04); 
  
  CI_uptemp3d04_26[k,1] = gghat_temp3d04[k,26]+1.96*sqrt((SIGMA2f_temp3d04[k,26]*0.3) ./ (0.5*denom_gghat_temp3d04[k,26]));
  CI_lowtemp3d04_26[k,1] = gghat_temp3d04[k,26]-1.96*sqrt((SIGMA2f_temp3d04[k,26]*0.3) ./ (0.5*denom_gghat_temp3d04[k,26]));   
  Inclusiontemp3d04_26[k,1] = 0.141>=CI_lowtemp3d04_26[k,1] and 0.141<=CI_uptemp3d04_26[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d04_26 = 100*(1-meanc(Inclusiontemp3d04_26)); /* power of the test in percentage */
 

 /* Power Calculation for point 0.5 */   
  CI_uptemp1d04_51 = zeros(rows(gghat_temp1d04),1);
  CI_lowtemp1d04_51 = zeros(rows(gghat_temp1d04),1);
  Inclusiontemp1d04_51 = zeros(rows(gghat_temp1d04),1);
  
  k = 1;
  do until k > rows(gghat_temp1d04); 
  
  CI_uptemp1d04_51[k,1] = gghat_temp1d04[k,51]+1.96*sqrt((SIGMA2f_temp1d04[k,51]*0.3) ./ (0.5*denom_gghat_temp1d04[k,51]));
  CI_lowtemp1d04_51[k,1] = gghat_temp1d04[k,51]-1.96*sqrt((SIGMA2f_temp1d04[k,51]*0.3) ./ (0.5*denom_gghat_temp1d04[k,51]));   
  Inclusiontemp1d04_51[k,1] = 0.156>=CI_lowtemp1d04_51[k,1] and 0.156<=CI_uptemp1d04_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d04_51 = 100*(1-meanc(Inclusiontemp1d04_51)); /* power of the test in percentage */
 
  CI_uptemp3d04_51 = zeros(rows(gghat_temp3d04),1);
  CI_lowtemp3d04_51 = zeros(rows(gghat_temp3d04),1);
  Inclusiontemp3d04_51 = zeros(rows(gghat_temp3d04),1);
  
  k = 1;
  do until k > rows(gghat_temp3d04); 
  
  CI_uptemp3d04_51[k,1] = gghat_temp3d04[k,51]+1.96*sqrt((SIGMA2f_temp3d04[k,51]*0.3) ./ (0.5*denom_gghat_temp3d04[k,51]));
  CI_lowtemp3d04_51[k,1] = gghat_temp3d04[k,51]-1.96*sqrt((SIGMA2f_temp3d04[k,51]*0.3) ./ (0.5*denom_gghat_temp3d04[k,51]));   
  Inclusiontemp3d04_51[k,1] = 0.156>=CI_lowtemp3d04_51[k,1] and 0.156<=CI_uptemp3d04_51[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d04_51 = 100*(1-meanc(Inclusiontemp3d04_51)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.75 */  
  CI_uptemp1d04_76 = zeros(rows(gghat_temp1d04),1);
  CI_lowtemp1d04_76 = zeros(rows(gghat_temp1d04),1);
  Inclusiontemp1d04_76 = zeros(rows(gghat_temp1d04),1);
  
  k = 1;
  do until k > rows(gghat_temp1d04); 
  
  CI_uptemp1d04_76[k,1] = gghat_temp1d04[k,76]+1.96*sqrt((SIGMA2f_temp1d04[k,76]*0.3) ./ (0.5*denom_gghat_temp1d04[k,76]));
  CI_lowtemp1d04_76[k,1] = gghat_temp1d04[k,76]-1.96*sqrt((SIGMA2f_temp1d04[k,76]*0.3) ./ (0.5*denom_gghat_temp1d04[k,76]));   
  Inclusiontemp1d04_76[k,1] = 0.170>=CI_lowtemp1d04_76[k,1] and 0.170<=CI_uptemp1d04_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d04_76 = 100*(1-meanc(Inclusiontemp1d04_76)); /* power of the test in percentage */
 
  CI_uptemp3d04_76 = zeros(rows(gghat_temp3d04),1);
  CI_lowtemp3d04_76 = zeros(rows(gghat_temp3d04),1);
  Inclusiontemp3d04_76 = zeros(rows(gghat_temp3d04),1);
  
  k = 1;
  do until k > rows(gghat_temp3d04); 
  
  CI_uptemp3d04_76[k,1] = gghat_temp3d04[k,76]+1.96*sqrt((SIGMA2f_temp3d04[k,76]*0.3) ./ (0.5*denom_gghat_temp3d04[k,76]));
  CI_lowtemp3d04_76[k,1] = gghat_temp3d04[k,76]-1.96*sqrt((SIGMA2f_temp3d04[k,76]*0.3) ./ (0.5*denom_gghat_temp3d04[k,76]));   
  Inclusiontemp3d04_76[k,1] = 0.170>=CI_lowtemp3d04_76[k,1] and 0.170<=CI_uptemp3d04_76[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d04_76 = 100*(1-meanc(Inclusiontemp3d04_76)); /* power of the test in percentage */ 

 
 /* Power Calculation for point 0.95 */  
  CI_uptemp1d04_96 = zeros(rows(gghat_temp1d04),1);
  CI_lowtemp1d04_96 = zeros(rows(gghat_temp1d04),1);
  Inclusiontemp1d04_96 = zeros(rows(gghat_temp1d04),1);
  
  k = 1;
  do until k > rows(gghat_temp1d04); 
  
  CI_uptemp1d04_96[k,1] = gghat_temp1d04[k,96]+1.96*sqrt((SIGMA2f_temp1d04[k,96]*0.3) ./ (0.5*denom_gghat_temp1d04[k,96]));
  CI_lowtemp1d04_96[k,1] = gghat_temp1d04[k,96]-1.96*sqrt((SIGMA2f_temp1d04[k,96]*0.3) ./ (0.5*denom_gghat_temp1d04[k,96]));   
  Inclusiontemp1d04_96[k,1] = 0.180>=CI_lowtemp1d04_96[k,1] and 0.180<=CI_uptemp1d04_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp1d04_96 = 100*(1-meanc(Inclusiontemp1d04_96)); /* power of the test in percentage */
 
  CI_uptemp3d04_96 = zeros(rows(gghat_temp3d04),1);
  CI_lowtemp3d04_96 = zeros(rows(gghat_temp3d04),1);
  Inclusiontemp3d04_96 = zeros(rows(gghat_temp3d04),1);
  
  k = 1;
  do until k > rows(gghat_temp3d04); 
  
  CI_uptemp3d04_96[k,1] = gghat_temp3d04[k,96]+1.96*sqrt((SIGMA2f_temp3d04[k,96]*0.3) ./ (0.5*denom_gghat_temp3d04[k,96]));
  CI_lowtemp3d04_96[k,1] = gghat_temp3d04[k,96]-1.96*sqrt((SIGMA2f_temp3d04[k,96]*0.3) ./ (0.5*denom_gghat_temp3d04[k,96]));   
  Inclusiontemp3d04_96[k,1] = 0.180>=CI_lowtemp3d04_96[k,1] and 0.180<=CI_uptemp3d04_96[k,1];
      
  k = k+1;
  endo;
  
 NotInclusiontemp3d04_96 = 100*(1-meanc(Inclusiontemp3d04_96)); /* power of the test in percentage */ 
  
 NotInclusiontemp1d04_1~NotInclusiontemp1d04_26~NotInclusiontemp1d04_51~NotInclusiontemp1d04_76~NotInclusiontemp1d04_96; /* print the results */ 
 
 NotInclusiontemp3d04_1~NotInclusiontemp3d04_26~NotInclusiontemp3d04_51~NotInclusiontemp3d04_76~NotInclusiontemp3d04_96;  /* print the results */ 
 
